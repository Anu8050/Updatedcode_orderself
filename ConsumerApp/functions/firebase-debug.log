[debug] [2023-07-05T09:05:44.803Z] ----------------------------------------------------------------------
[debug] [2023-07-05T09:05:44.804Z] Command:       /home/vinay/.nvm/versions/node/v16.20.0/bin/node /home/vinay/.nvm/versions/node/v16.20.0/bin/firebase deploy --only functions
[debug] [2023-07-05T09:05:44.805Z] CLI Version:   12.4.2
[debug] [2023-07-05T09:05:44.805Z] Platform:      linux
[debug] [2023-07-05T09:05:44.805Z] Node Version:  v16.20.0
[debug] [2023-07-05T09:05:44.805Z] Time:          Wed Jul 05 2023 14:35:44 GMT+0530 (India Standard Time)
[debug] [2023-07-05T09:05:44.805Z] ----------------------------------------------------------------------
[debug] 
[debug] [2023-07-05T09:05:44.861Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-07-05T09:05:44.861Z] > authorizing via signed-in user (reactdeveloper@phyelements.com)
[debug] [2023-07-05T09:05:44.861Z] [iam] checking project orderselfdb for permissions ["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]
[debug] [2023-07-05T09:05:44.863Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions [none]
[debug] [2023-07-05T09:05:44.863Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:05:44.863Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions {"permissions":["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]}
[debug] [2023-07-05T09:05:46.320Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions 200
[debug] [2023-07-05T09:05:46.321Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions {"permissions":["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]}
[debug] [2023-07-05T09:05:46.322Z] >>> [apiv2][query] POST https://iam.googleapis.com/v1/projects/orderselfdb/serviceAccounts/orderselfdb@appspot.gserviceaccount.com:testIamPermissions [none]
[debug] [2023-07-05T09:05:46.322Z] >>> [apiv2][body] POST https://iam.googleapis.com/v1/projects/orderselfdb/serviceAccounts/orderselfdb@appspot.gserviceaccount.com:testIamPermissions {"permissions":["iam.serviceAccounts.actAs"]}
[debug] [2023-07-05T09:05:47.680Z] <<< [apiv2][status] POST https://iam.googleapis.com/v1/projects/orderselfdb/serviceAccounts/orderselfdb@appspot.gserviceaccount.com:testIamPermissions 200
[debug] [2023-07-05T09:05:47.681Z] <<< [apiv2][body] POST https://iam.googleapis.com/v1/projects/orderselfdb/serviceAccounts/orderselfdb@appspot.gserviceaccount.com:testIamPermissions {"permissions":["iam.serviceAccounts.actAs"]}
[info] 
[info] === Deploying to 'orderselfdb'...
[info] 
[info] i  deploying functions 
[debug] [2023-07-05T09:05:47.692Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb [none]
[debug] [2023-07-05T09:05:48.392Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb 200
[debug] [2023-07-05T09:05:48.392Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb {"projectId":"orderselfdb","projectNumber":"587486512635","displayName":"orderselfdb","name":"projects/orderselfdb","resources":{"hostingSite":"orderselfdb","storageBucket":"orderselfdb.appspot.com","locationId":"europe-west"},"state":"ACTIVE","etag":"1_f8f32fd8-e496-4c62-b5ac-18753a634b21"}
[info] i  functions: preparing codebase default for deployment 
[info] i  functions: ensuring required API cloudfunctions.googleapis.com is enabled... 
[info] i  functions: ensuring required API cloudbuild.googleapis.com is enabled... 
[info] i  artifactregistry: ensuring required API artifactregistry.googleapis.com is enabled... 
[debug] [2023-07-05T09:05:48.395Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudfunctions.googleapis.com [none]
[debug] [2023-07-05T09:05:48.396Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudfunctions.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:05:48.397Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/runtimeconfig.googleapis.com [none]
[debug] [2023-07-05T09:05:48.398Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/runtimeconfig.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:05:48.399Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudbuild.googleapis.com [none]
[debug] [2023-07-05T09:05:48.399Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudbuild.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:05:48.401Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/artifactregistry.googleapis.com [none]
[debug] [2023-07-05T09:05:48.401Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/artifactregistry.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:05:50.110Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/artifactregistry.googleapis.com 200
[debug] [2023-07-05T09:05:50.110Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/artifactregistry.googleapis.com [omitted]
[info] ✔  artifactregistry: required API artifactregistry.googleapis.com is enabled 
[debug] [2023-07-05T09:05:50.113Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/runtimeconfig.googleapis.com 200
[debug] [2023-07-05T09:05:50.113Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/runtimeconfig.googleapis.com [omitted]
[debug] [2023-07-05T09:05:50.114Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudbuild.googleapis.com 200
[debug] [2023-07-05T09:05:50.115Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudbuild.googleapis.com [omitted]
[info] ✔  functions: required API cloudbuild.googleapis.com is enabled 
[debug] [2023-07-05T09:05:50.117Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudfunctions.googleapis.com 200
[debug] [2023-07-05T09:05:50.117Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudfunctions.googleapis.com [omitted]
[info] ✔  functions: required API cloudfunctions.googleapis.com is enabled 
[debug] [2023-07-05T09:05:50.117Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb/adminSdkConfig [none]
[debug] [2023-07-05T09:05:50.644Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb/adminSdkConfig 200
[debug] [2023-07-05T09:05:50.644Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb/adminSdkConfig {"projectId":"orderselfdb","storageBucket":"orderselfdb.appspot.com","locationId":"europe-west"}
[debug] [2023-07-05T09:05:50.646Z] >>> [apiv2][query] GET https://runtimeconfig.googleapis.com/v1beta1/projects/orderselfdb/configs [none]
[debug] [2023-07-05T09:05:51.125Z] <<< [apiv2][status] GET https://runtimeconfig.googleapis.com/v1beta1/projects/orderselfdb/configs 200
[debug] [2023-07-05T09:05:51.125Z] <<< [apiv2][body] GET https://runtimeconfig.googleapis.com/v1beta1/projects/orderselfdb/configs {}
[debug] [2023-07-05T09:05:51.131Z] Validating nodejs source
[debug] [2023-07-05T09:05:51.944Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "serve": "firebase emulators:start --only functions",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "@google-cloud/firestore": "^6.6.1",
    "axios": "^1.4.0",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "express": "^4.18.2",
    "firebase": "^9.23.0",
    "firebase-admin": "^10.3.0",
    "firebase-functions": "^4.4.1"
  },
  "devDependencies": {
    "firebase-functions-test": "^0.2.0"
  },
  "private": true
}
[debug] [2023-07-05T09:05:51.944Z] Building nodejs source
[info] i  functions: Loading and anaylzing source code for codebase default to determine what to deploy 
[debug] [2023-07-05T09:05:51.945Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-07-05T09:05:51.949Z] Found firebase-functions binary at '/home/vinay/Projects/phyelements/orderself-consumer-ui-v1.0-main/functions/node_modules/.bin/firebase-functions'
[info] Serving at port 8606

[debug] [2023-07-05T09:05:52.244Z] Got response from /__/functions.yaml {"endpoints":{"getSellerStatus":{"availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"concurrency":null,"serviceAccountEmail":null,"vpc":null,"platform":"gcfv2","labels":{},"httpsTrigger":{},"entryPoint":"getSellerStatus"},"createPaypalOrder-createOrder":{"availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"concurrency":null,"serviceAccountEmail":null,"vpc":null,"platform":"gcfv2","labels":{},"httpsTrigger":{},"entryPoint":"createPaypalOrder.createOrder"},"sellerVerification-sellerVerification":{"availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"concurrency":null,"serviceAccountEmail":null,"vpc":null,"platform":"gcfv2","labels":{},"httpsTrigger":{},"entryPoint":"sellerVerification.sellerVerification"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[info] shutdown requested via /__/quitquitquit

[error] 
/home/vinay/Projects/phyelements/orderself-consumer-ui-v1.0-main/functions/node_modules/axios/dist/node/axios.cjs:1909
    reject(new AxiosError(
           ^

[error] AxiosError: Request failed with status code 503
    at settle (/home/vinay/Projects/phyelements/orderself-consumer-ui-v1.0-main/functions/node_modules/axios/dist/node/axios.cjs:1909:12)
    at IncomingMessage.handleStreamEnd (/home/vinay/Projects/phyelements/orderself-consumer-ui-v1.0-main/functions/node_modules/axios/dist/node/axios.cjs:2989:11)
    at IncomingMessage.emit (node:events:525:35)
    at endReadableNT (node:internal/streams/readable:1358:12)
    at processTicksAndRejections (node:internal/process/task_queues:83:21) {
  code: 'ERR_BAD_RESPONSE',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData] {
        LINE_BREAK: '\r\n',
        DEFAULT_CONTENT_TYPE: 'application/octet-stream'
      },
      Blob: null
    },
    validateStatus: [Function: validateStatus],
    headers: AxiosHeaders {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/x-www-form-urlencoded',
      Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
      'User-Agent': 'axios/1.4.0',
      'Content-Length': '29',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    method: 'post',
    url: 'https://api-m.sandbox.paypal.com/v1/oauth2/token',
    data: 'grant_type=client_credentials'
  },
  request: <ref *2> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: '29',
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    socket: <ref *1> TLSSocket {
      _tlsOptions: {
        allowHalfOpen: undefined,
        pipe: false,
        secureContext: SecureContext { context: SecureContext {} },
        isServer: false,
        requestCert: true,
        rejectUnauthorized: true,
        session: undefined,
        ALPNProtocols: undefined,
        requestOCSP: undefined,
        enableTrace: undefined,
        pskCallback: undefined,
        highWaterMark: undefined,
        onread: undefined,
        signal: undefined
      },
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'api-m.sandbox.paypal.com',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype] {
        close: [
          [Function: onSocketCloseDestroySSL],
          [Function: bound onceWrapper] {
            listener: [Function (anonymous)]
          },
          [Function: onClose],
          [Function: socketCloseListener]
        ],
        end: [Function: onReadableStreamEnd],
        newListener: [Function: keylogNewListener],
        secure: [Function: onConnectSecure],
        session: [Function (anonymous)],
        free: [Function: onFree],
        timeout: [Function: onTimeout],
        agentRemove: [Function: onRemove],
        error: [Function: socketErrorListener],
        finish: [Function: bound onceWrapper] { listener: [Function: destroy] }
      },
      _eventsCount: 10,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'api-m.sandbox.paypal.com',
      _closeAfterHandlingError: false,
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        constructed: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: true,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: true,
        needDrain: false,
        ending: true,
        ended: true,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        buffered: [],
        bufferedIndex: 0,
        allBuffers: true,
        allNoop: true,
        pendingcb: 1,
        constructed: true,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: true,
        errored: null,
        closed: false,
        closeEmitted: false,
        [Symbol(kOnFinished)]: []
      },
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: TLSWrap {
        _parent: TCP {
          reading: [Getter/Setter],
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _parentWrap: undefined,
        _secureContext: SecureContext { context: SecureContext {} },
        reading: true,
        onkeylog: [Function: onkeylog],
        onhandshakestart: {},
        onhandshakedone: [Function (anonymous)],
        onocspresponse: [Function: onocspresponse],
        onnewsession: [Function: onnewsessionclient],
        onerror: [Function: onerror],
        [Symbol(owner_symbol)]: [Circular *1]
      },
      _requestCert: true,
      _rejectUnauthorized: true,
      parser: null,
      _httpMessage: [Circular *2],
      [Symbol(res)]: TLSWrap {
        _parent: TCP {
          reading: [Getter/Setter],
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _parentWrap: undefined,
        _secureContext: SecureContext { context: SecureContext {} },
        reading: true,
        onkeylog: [Function: onkeylog],
        onhandshakestart: {},
        onhandshakedone: [Function (anonymous)],
        onocspresponse: [Function: onocspresponse],
        onnewsession: [Function: onnewsessionclient],
        onerror: [Function: onerror],
        [Symbol(owner_symbol)]: [Circular *1]
      },
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 11,
      [Symbol(kHandle)]: TLSWrap {
        _parent: TCP {
          reading: [Getter/Setter],
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _parentWrap: undefined,
        _secureContext: SecureContext { context: SecureContext {} },
        reading: true,
        onkeylog: [Function: onkeylog],
        onhandshakestart: {},
        onhandshakedone: [Function (anonymous)],
        onocspresponse: [Function: onocspresponse],
        onnewsession: [Function: onnewsessionclient],
        onerror: [Function: onerror],
        [Symbol(owner_symbol)]: [Circular *1]
      },
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: {
        rejectUnauthorized: true,
        ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
        checkServerIdentity: [Function: checkServerIdentity],
        minDHSize: 1024,
        maxRedirects: 21,
        maxBodyLength: Infinity,
        protocol: 'https:',
        path: null,
        method: 'POST',
        headers: [Object: null prototype] {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/x-www-form-urlencoded',
          Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
          'User-Agent': 'axios/1.4.0',
          'Content-Length': '29',
          'Accept-Encoding': 'gzip, compress, deflate, br'
        },
        agents: { http: undefined, https: undefined },
        auth: undefined,
        family: undefined,
        lookup: undefined,
        beforeRedirect: [Function: dispatchBeforeRedirect],
        beforeRedirects: { proxy: [Function: beforeRedirect] },
        hostname: 'api-m.sandbox.paypal.com',
        port: 443,
        agent: undefined,
        nativeProtocols: {
          'http:': {
            _connectionListener: [Function: connectionListener],
            METHODS: [Array],
            STATUS_CODES: [Object],
            Agent: [Function],
            ClientRequest: [Function: ClientRequest],
            IncomingMessage: [Function: IncomingMessage],
            OutgoingMessage: [Function: OutgoingMessage],
            Server: [Function: Server],
            ServerResponse: [Function: ServerResponse],
            createServer: [Function: createServer],
            validateHeaderName: [Function: __node_internal_],
            validateHeaderValue: [Function: __node_internal_],
            get: [Function: get],
            request: [Function: request],
            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
            maxHeaderSize: [Getter],
            globalAgent: [Getter/Setter]
          },
          'https:': {
            Agent: [Function: Agent],
            globalAgent: [Agent],
            Server: [Function: Server],
            createServer: [Function: createServer],
            get: [Function: get],
            request: [Function: request]
          }
        },
        pathname: '/v1/oauth2/token',
        _defaultAgent: Agent {
          _events: [Object: null prototype] {
            free: [Function (anonymous)],
            newListener: [Function: maybeEnableKeylog]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 443,
          protocol: 'https:',
          options: [Object: null prototype] { path: null },
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype] {
            'api-m.sandbox.paypal.com:443:::::::::::::::::::::': [Array]
          },
          freeSockets: [Object: null prototype] {},
          keepAliveMsecs: 1000,
          keepAlive: false,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          maxCachedSessions: 100,
          _sessionCache: { map: [Object], list: [Array] },
          [Symbol(kCapture)]: false
        },
        host: 'api-m.sandbox.paypal.com',
        servername: 'api-m.sandbox.paypal.com',
        _agentKey: 'api-m.sandbox.paypal.com:443:::::::::::::::::::::',
        encoding: null,
        singleUse: true
      },
      [Symbol(RequestTimeout)]: undefined
    },
    _header: 'POST /v1/oauth2/token HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/x-www-form-urlencoded\r\n' +
      'Authorization: Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=\r\n' +
      'User-Agent: axios/1.4.0\r\n' +
      'Content-Length: 29\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: api-m.sandbox.paypal.com\r\n' +
      'Connection: close\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype] {
        free: [Function (anonymous)],
        newListener: [Function: maybeEnableKeylog]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype] { path: null },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {
        'api-m.sandbox.paypal.com:443:::::::::::::::::::::': [
          <ref *1> TLSSocket {
            _tlsOptions: [Object],
            _secureEstablished: true,
            _securePending: false,
            _newSessionPending: false,
            _controlReleased: true,
            secureConnecting: false,
            _SNICallback: null,
            servername: 'api-m.sandbox.paypal.com',
            alpnProtocol: false,
            authorized: true,
            authorizationError: null,
            encrypted: true,
            _events: [Object: null prototype],
            _eventsCount: 10,
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'api-m.sandbox.paypal.com',
            _closeAfterHandlingError: false,
            _readableState: [ReadableState],
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: undefined,
            _server: null,
            ssl: [TLSWrap],
            _requestCert: true,
            _rejectUnauthorized: true,
            parser: null,
            _httpMessage: [Circular *2],
            [Symbol(res)]: [TLSWrap],
            [Symbol(verified)]: true,
            [Symbol(pendingSession)]: null,
            [Symbol(async_id_symbol)]: 11,
            [Symbol(kHandle)]: [TLSWrap],
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kSetNoDelay)]: false,
            [Symbol(kSetKeepAlive)]: true,
            [Symbol(kSetKeepAliveInitialDelay)]: 60,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0,
            [Symbol(connect-options)]: [Object],
            [Symbol(RequestTimeout)]: undefined
          }
        ]
      },
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: {
        map: {
          'api-m.sandbox.paypal.com:443:::::::::::::::::::::': Buffer(2970) [Uint8Array] [
             48, 130,  11, 150,   2,   1,   1,   2,   2,   3,   4,   4,
              2,  19,   2,   4,  32, 184, 226, 223, 181, 116, 208, 168,
            222, 126, 173, 127, 233,  16, 157, 228, 161, 212, 161,  49,
            233, 115, 222, 200,  83,   3, 208,  70, 201, 218,  68,  13,
            136,   4,  48,  44, 119,  52, 115, 194, 134,  27,  35, 155,
            146,  34,  22, 154, 225, 196, 222, 169, 101, 185, 129,  11,
            129,  16,  65,  60, 232, 213, 209, 186,  45,  64, 193,  81,
              0,   5,  63, 181, 173,  56,  32,  44, 231,  82, 112, 173,
            241, 200, 167, 161,
            ... 2870 more items
          ]
        },
        list: [ 'api-m.sandbox.paypal.com:443:::::::::::::::::::::' ]
      },
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'POST',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    path: '/v1/oauth2/token',
    _ended: true,
    res: IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        constructed: true,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        destroyed: true,
        errored: null,
        closed: true,
        closeEmitted: true,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: true,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] {
        end: [ [Function: responseOnEnd], [Function: handleStreamEnd] ],
        error: [Function: handleStreamError],
        data: [Function: handleStreamData],
        aborted: [Function: handlerStreamAborted]
      },
      _eventsCount: 4,
      _maxListeners: undefined,
      socket: <ref *1> TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'api-m.sandbox.paypal.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function],
            [Function: onClose],
            [Function: socketCloseListener]
          ],
          end: [Function: onReadableStreamEnd],
          newListener: [Function: keylogNewListener],
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          error: [Function: socketErrorListener],
          finish: [Function: bound onceWrapper] {
            listener: [Function: destroy]
          }
        },
        _eventsCount: 10,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'api-m.sandbox.paypal.com',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: true,
          needDrain: false,
          ending: true,
          ended: true,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 1,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular *2],
        [Symbol(res)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: 11,
        [Symbol(kHandle)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 60,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: 'https:',
          path: null,
          method: 'POST',
          headers: [Object: null prototype] {
            Accept: 'application/json, text/plain, */*',
            'Content-Type': 'application/x-www-form-urlencoded',
            Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
            'User-Agent': 'axios/1.4.0',
            'Content-Length': '29',
            'Accept-Encoding': 'gzip, compress, deflate, br'
          },
          agents: { http: undefined, https: undefined },
          auth: undefined,
          family: undefined,
          lookup: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: { proxy: [Function: beforeRedirect] },
          hostname: 'api-m.sandbox.paypal.com',
          port: 443,
          agent: undefined,
          nativeProtocols: { 'http:': [Object], 'https:': [Object] },
          pathname: '/v1/oauth2/token',
          _defaultAgent: Agent {
            _events: [Object: null prototype],
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype],
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype],
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: false,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: [Object],
            [Symbol(kCapture)]: false
          },
          host: 'api-m.sandbox.paypal.com',
          servername: 'api-m.sandbox.paypal.com',
          _agentKey: 'api-m.sandbox.paypal.com:443:::::::::::::::::::::',
          encoding: null,
          singleUse: true
        },
        [Symbol(RequestTimeout)]: undefined
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Connection',
        'close',
        'Content-Length',
        '447',
        'Server',
        'Varnish',
        'Retry-After',
        '0',
        'Content-Type',
        'text/html; charset=utf-8',
        'Accept-Ranges',
        'bytes',
        'Via',
        '1.1 varnish, 1.1 varnish',
        'Edge-Control',
        'max-age=120',
        'Date',
        'Wed, 05 Jul 2023 09:05:52 GMT',
        'X-Served-By',
        'cache-qpg1265-QPG, cache-maa10226-MAA',
        'X-Cache',
        'MISS, MISS',
        'X-Cache-Hits',
        '0, 0',
        'X-Timer',
        'S1688547953.520661,VS0,VE38'
      ],
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 503,
      statusMessage: 'No healthy backends',
      client: <ref *1> TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'api-m.sandbox.paypal.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function],
            [Function: onClose],
            [Function: socketCloseListener]
          ],
          end: [Function: onReadableStreamEnd],
          newListener: [Function: keylogNewListener],
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          error: [Function: socketErrorListener],
          finish: [Function: bound onceWrapper] {
            listener: [Function: destroy]
          }
        },
        _eventsCount: 10,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'api-m.sandbox.paypal.com',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: true,
          needDrain: false,
          ending: true,
          ended: true,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 1,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular *2],
        [Symbol(res)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: 11,
        [Symbol(kHandle)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 60,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: 'https:',
          path: null,
          method: 'POST',
          headers: [Object: null prototype] {
            Accept: 'application/json, text/plain, */*',
            'Content-Type': 'application/x-www-form-urlencoded',
            Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
            'User-Agent': 'axios/1.4.0',
            'Content-Length': '29',
            'Accept-Encoding': 'gzip, compress, deflate, br'
          },
          agents: { http: undefined, https: undefined },
          auth: undefined,
          family: undefined,
          lookup: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: { proxy: [Function: beforeRedirect] },
          hostname: 'api-m.sandbox.paypal.com',
          port: 443,
          agent: undefined,
          nativeProtocols: { 'http:': [Object], 'https:': [Object] },
          pathname: '/v1/oauth2/token',
          _defaultAgent: Agent {
            _events: [Object: null prototype],
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype],
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype],
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: false,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: [Object],
            [Symbol(kCapture)]: false
          },
          host: 'api-m.sandbox.paypal.com',
          servername: 'api-m.sandbox.paypal.com',
          _agentKey: 'api-m.sandbox.paypal.com:443:::::::::::::::::::::',
          encoding: null,
          singleUse: true
        },
        [Symbol(RequestTimeout)]: undefined
      },
      _consuming: true,
      _dumped: false,
      req: [Circular *2],
      responseUrl: 'https://api-m.sandbox.paypal.com/v1/oauth2/token',
      redirects: [],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        connection: 'close',
        'content-length': '447',
        server: 'Varnish',
        'retry-after': '0',
        'content-type': 'text/html; charset=utf-8',
        'accept-ranges': 'bytes',
        via: '1.1 varnish, 1.1 varnish',
        'edge-control': 'max-age=120',
        date: 'Wed, 05 Jul 2023 09:05:52 GMT',
        'x-served-by': 'cache-qpg1265-QPG, cache-maa10226-MAA',
        'x-cache': 'MISS, MISS',
        'x-cache-hits': '0, 0',
        'x-timer': 'S1688547953.520661,VS0,VE38'
      },
      [Symbol(kHeadersCount)]: 26,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'api-m.sandbox.paypal.com',
    protocol: 'https:',
    _redirectable: Writable {
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        buffered: [],
        bufferedIndex: 0,
        allBuffers: true,
        allNoop: true,
        pendingcb: 0,
        constructed: true,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        errored: null,
        closed: false,
        closeEmitted: false,
        [Symbol(kOnFinished)]: []
      },
      _events: [Object: null prototype] {
        response: [Function: handleResponse],
        error: [Function: handleRequestError],
        socket: [Function: handleRequestSocket]
      },
      _eventsCount: 3,
      _maxListeners: undefined,
      _options: {
        maxRedirects: 21,
        maxBodyLength: Infinity,
        protocol: 'https:',
        path: '/v1/oauth2/token',
        method: 'POST',
        headers: [Object: null prototype] {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/x-www-form-urlencoded',
          Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
          'User-Agent': 'axios/1.4.0',
          'Content-Length': '29',
          'Accept-Encoding': 'gzip, compress, deflate, br'
        },
        agents: { http: undefined, https: undefined },
        auth: undefined,
        family: undefined,
        lookup: undefined,
        beforeRedirect: [Function: dispatchBeforeRedirect],
        beforeRedirects: { proxy: [Function: beforeRedirect] },
        hostname: 'api-m.sandbox.paypal.com',
        port: '',
        agent: undefined,
        nativeProtocols: {
          'http:': {
            _connectionListener: [Function: connectionListener],
            METHODS: [Array],
            STATUS_CODES: [Object],
            Agent: [Function],
            ClientRequest: [Function: ClientRequest],
            IncomingMessage: [Function: IncomingMessage],
            OutgoingMessage: [Function: OutgoingMessage],
            Server: [Function: Server],
            ServerResponse: [Function: ServerResponse],
            createServer: [Function: createServer],
            validateHeaderName: [Function: __node_internal_],
            validateHeaderValue: [Function: __node_internal_],
            get: [Function: get],
            request: [Function: request],
            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
            maxHeaderSize: [Getter],
            globalAgent: [Getter/Setter]
          },
          'https:': {
            Agent: [Function: Agent],
            globalAgent: [Agent],
            Server: [Function: Server],
            createServer: [Function: createServer],
            get: [Function: get],
            request: [Function: request]
          }
        },
        pathname: '/v1/oauth2/token'
      },
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 29,
      _requestBodyBuffers: [],
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *2],
      _currentUrl: 'https://api-m.sandbox.paypal.com/v1/oauth2/token',
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kEndCalled)]: true,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [ 'Accept', 'application/json, text/plain, */*' ],
      'content-type': [ 'Content-Type', 'application/x-www-form-urlencoded' ],
      authorization: [
        'Authorization',
        'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k='
      ],
      'user-agent': [ 'User-Agent', 'axios/1.4.0' ],
      'content-length': [ 'Content-Length', '29' ],
      'accept-encoding': [ 'Accept-Encoding', 'gzip, compress, deflate, br' ],
      host: [ 'Host', 'api-m.sandbox.paypal.com' ]
    },
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 503,
    statusText: 'No healthy backends',
    headers: AxiosHeaders {
      connection: 'close',
      'content-length': '447',
      server: 'Varnish',
      'retry-after': '0',
      'content-type': 'text/html; charset=utf-8',
      'accept-ranges': 'bytes',
      via: '1.1 varnish, 1.1 varnish',
      'edge-control': 'max-age=120',
      date: 'Wed, 05 Jul 2023 09:05:52 GMT',
      'x-served-by': 'cache-qpg1265-QPG, cache-maa10226-MAA',
      'x-cache': 'MISS, MISS',
      'x-cache-hits': '0, 0',
      'x-timer': 'S1688547953.520661,VS0,VE38'
    },
    config: {
      transitional: {
        silentJSONParsing: true,
        forcedJSONParsing: true,
        clarifyTimeoutError: false
      },
      adapter: [ 'xhr', 'http' ],
      transformRequest: [ [Function: transformRequest] ],
      transformResponse: [ [Function: transformResponse] ],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: [Function: FormData] {
          LINE_BREAK: '\r\n',
          DEFAULT_CONTENT_TYPE: 'application/octet-stream'
        },
        Blob: null
      },
      validateStatus: [Function: validateStatus],
      headers: AxiosHeaders {
        Accept: 'application/json, text/plain, */*',
        'Content-Type': 'application/x-www-form-urlencoded',
        Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
        'User-Agent': 'axios/1.4.0',
        'Content-Length': '29',
        'Accept-Encoding': 'gzip, compress, deflate, br'
      },
      method: 'post',
      url: 'https://api-m.sandbox.paypal.com/v1/oauth2/token',
      data: 'grant_type=client_credentials'
    },
    request: <ref *2> ClientRequest {
      _events: [Object: null prototype] {
        abort: [Function (anonymous)],
        aborted: [Function (anonymous)],
        connect: [Function (anonymous)],
        error: [Function (anonymous)],
        socket: [Function (anonymous)],
        timeout: [Function (anonymous)],
        finish: [Function: requestOnFinish]
      },
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: '29',
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      socket: <ref *1> TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'api-m.sandbox.paypal.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function],
            [Function: onClose],
            [Function: socketCloseListener]
          ],
          end: [Function: onReadableStreamEnd],
          newListener: [Function: keylogNewListener],
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          error: [Function: socketErrorListener],
          finish: [Function: bound onceWrapper] {
            listener: [Function: destroy]
          }
        },
        _eventsCount: 10,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'api-m.sandbox.paypal.com',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: true,
          needDrain: false,
          ending: true,
          ended: true,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 1,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular *2],
        [Symbol(res)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: 11,
        [Symbol(kHandle)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 60,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: 'https:',
          path: null,
          method: 'POST',
          headers: [Object: null prototype] {
            Accept: 'application/json, text/plain, */*',
            'Content-Type': 'application/x-www-form-urlencoded',
            Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
            'User-Agent': 'axios/1.4.0',
            'Content-Length': '29',
            'Accept-Encoding': 'gzip, compress, deflate, br'
          },
          agents: { http: undefined, https: undefined },
          auth: undefined,
          family: undefined,
          lookup: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: { proxy: [Function: beforeRedirect] },
          hostname: 'api-m.sandbox.paypal.com',
          port: 443,
          agent: undefined,
          nativeProtocols: { 'http:': [Object], 'https:': [Object] },
          pathname: '/v1/oauth2/token',
          _defaultAgent: Agent {
            _events: [Object: null prototype],
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype],
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype],
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: false,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: [Object],
            [Symbol(kCapture)]: false
          },
          host: 'api-m.sandbox.paypal.com',
          servername: 'api-m.sandbox.paypal.com',
          _agentKey: 'api-m.sandbox.paypal.com:443:::::::::::::::::::::',
          encoding: null,
          singleUse: true
        },
        [Symbol(RequestTimeout)]: undefined
      },
      _header: 'POST /v1/oauth2/token HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/x-www-form-urlencoded\r\n' +
        'Authorization: Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=\r\n' +
        'User-Agent: axios/1.4.0\r\n' +
        'Content-Length: 29\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: api-m.sandbox.paypal.com\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: Agent {
        _events: [Object: null prototype] {
          free: [Function (anonymous)],
          newListener: [Function: maybeEnableKeylog]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: [Object: null prototype] { path: null },
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype] {
          'api-m.sandbox.paypal.com:443:::::::::::::::::::::': [ [TLSSocket] ]
        },
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        scheduling: 'lifo',
        maxTotalSockets: Infinity,
        totalSocketCount: 1,
        maxCachedSessions: 100,
        _sessionCache: {
          map: {
            'api-m.sandbox.paypal.com:443:::::::::::::::::::::': [Buffer [Uint8Array]]
          },
          list: [ 'api-m.sandbox.paypal.com:443:::::::::::::::::::::' ]
        },
        [Symbol(kCapture)]: false
      },
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      path: '/v1/oauth2/token',
      _ended: true,
      res: IncomingMessage {
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: true,
          endEmitted: true,
          reading: false,
          constructed: true,
          sync: false,
          needReadable: false,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: true,
          autoDestroy: true,
          destroyed: true,
          errored: null,
          closed: true,
          closeEmitted: true,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: responseOnEnd], [Function: handleStreamEnd] ],
          error: [Function: handleStreamError],
          data: [Function: handleStreamData],
          aborted: [Function: handlerStreamAborted]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: <ref *1> TLSSocket {
          _tlsOptions: {
            allowHalfOpen: undefined,
            pipe: false,
            secureContext: [SecureContext],
            isServer: false,
            requestCert: true,
            rejectUnauthorized: true,
            session: undefined,
            ALPNProtocols: undefined,
            requestOCSP: undefined,
            enableTrace: undefined,
            pskCallback: undefined,
            highWaterMark: undefined,
            onread: undefined,
            signal: undefined
          },
          _secureEstablished: true,
          _securePending: false,
          _newSessionPending: false,
          _controlReleased: true,
          secureConnecting: false,
          _SNICallback: null,
          servername: 'api-m.sandbox.paypal.com',
          alpnProtocol: false,
          authorized: true,
          authorizationError: null,
          encrypted: true,
          _events: [Object: null prototype] {
            close: [Array],
            end: [Function: onReadableStreamEnd],
            newListener: [Function: keylogNewListener],
            secure: [Function: onConnectSecure],
            session: [Function (anonymous)],
            free: [Function: onFree],
            timeout: [Function: onTimeout],
            agentRemove: [Function: onRemove],
            error: [Function: socketErrorListener],
            finish: [Function]
          },
          _eventsCount: 10,
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'api-m.sandbox.paypal.com',
          _closeAfterHandlingError: false,
          _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: [BufferList],
            length: 0,
            pipes: [],
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            constructed: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: true,
            destroyed: false,
            errored: null,
            closed: false,
            closeEmitted: false,
            defaultEncoding: 'utf8',
            awaitDrainWriters: null,
            multiAwaitDrain: false,
            readingMore: false,
            dataEmitted: true,
            decoder: null,
            encoding: null,
            [Symbol(kPaused)]: false
          },
          _maxListeners: undefined,
          _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            finalCalled: true,
            needDrain: false,
            ending: true,
            ended: true,
            finished: false,
            destroyed: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function: bound onwrite],
            writecb: null,
            writelen: 0,
            afterWriteTickInfo: null,
            buffered: [],
            bufferedIndex: 0,
            allBuffers: true,
            allNoop: true,
            pendingcb: 1,
            constructed: true,
            prefinished: false,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: true,
            errored: null,
            closed: false,
            closeEmitted: false,
            [Symbol(kOnFinished)]: []
          },
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: undefined,
          _server: null,
          ssl: TLSWrap {
            _parent: [TCP],
            _parentWrap: undefined,
            _secureContext: [SecureContext],
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: {},
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _requestCert: true,
          _rejectUnauthorized: true,
          parser: null,
          _httpMessage: [Circular *2],
          [Symbol(res)]: TLSWrap {
            _parent: [TCP],
            _parentWrap: undefined,
            _secureContext: [SecureContext],
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: {},
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(verified)]: true,
          [Symbol(pendingSession)]: null,
          [Symbol(async_id_symbol)]: 11,
          [Symbol(kHandle)]: TLSWrap {
            _parent: [TCP],
            _parentWrap: undefined,
            _secureContext: [SecureContext],
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: {},
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: 
[error] [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: false,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 60,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(connect-options)]: {
            rejectUnauthorized: true,
            ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
            checkServerIdentity: [Function: checkServerIdentity],
            minDHSize: 1024,
            maxRedirects: 21,
            maxBodyLength: Infinity,
            protocol: 'https:',
            path: null,
            method: 'POST',
            headers: [Object: null prototype],
            agents: [Object],
            auth: undefined,
            family: undefined,
            lookup: undefined,
            beforeRedirect: [Function: dispatchBeforeRedirect],
            beforeRedirects: [Object],
            hostname: 'api-m.sandbox.paypal.com',
            port: 443,
            agent: undefined,
            nativeProtocols: [Object],
            pathname: '/v1/oauth2/token',
            _defaultAgent: [Agent],
            host: 'api-m.sandbox.paypal.com',
            servername: 'api-m.sandbox.paypal.com',
            _agentKey: 'api-m.sandbox.paypal.com:443:::::::::::::::::::::',
            encoding: null,
            singleUse: true
          },
          [Symbol(RequestTimeout)]: undefined
        },
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        rawHeaders: [
          'Connection',
          'close',
          'Content-Length',
          '447',
          'Server',
          'Varnish',
          'Retry-After',
          '0',
          'Content-Type',
          'text/html; charset=utf-8',
          'Accept-Ranges',
          'bytes',
          'Via',
          '1.1 varnish, 1.1 varnish',
          'Edge-Control',
          'max-age=120',
          'Date',
          'Wed, 05 Jul 2023 09:05:52 GMT',
          'X-Served-By',
          'cache-qpg1265-QPG, cache-maa10226-MAA',
          'X-Cache',
          'MISS, MISS',
          'X-Cache-Hits',
          '0, 0',
          'X-Timer',
          'S1688547953.520661,VS0,VE38'
        ],
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 503,
        statusMessage: 'No healthy backends',
        client: <ref *1> TLSSocket {
          _tlsOptions: {
            allowHalfOpen: undefined,
            pipe: false,
            secureContext: [SecureContext],
            isServer: false,
            requestCert: true,
            rejectUnauthorized: true,
            session: undefined,
            ALPNProtocols: undefined,
            requestOCSP: undefined,
            enableTrace: undefined,
            pskCallback: undefined,
            highWaterMark: undefined,
            onread: undefined,
            signal: undefined
          },
          _secureEstablished: true,
          _securePending: false,
          _newSessionPending: false,
          _controlReleased: true,
          secureConnecting: false,
          _SNICallback: null,
          servername: 'api-m.sandbox.paypal.com',
          alpnProtocol: false,
          authorized: true,
          authorizationError: null,
          encrypted: true,
          _events: [Object: null prototype] {
            close: [Array],
            end: [Function: onReadableStreamEnd],
            newListener: [Function: keylogNewListener],
            secure: [Function: onConnectSecure],
            session: [Function (anonymous)],
            free: [Function: onFree],
            timeout: [Function: onTimeout],
            agentRemove: [Function: onRemove],
            error: [Function: socketErrorListener],
            finish: [Function]
          },
          _eventsCount: 10,
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'api-m.sandbox.paypal.com',
          _closeAfterHandlingError: false,
          _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: [BufferList],
            length: 0,
            pipes: [],
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            constructed: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: true,
            destroyed: false,
            errored: null,
            closed: false,
            closeEmitted: false,
            defaultEncoding: 'utf8',
            awaitDrainWriters: null,
            multiAwaitDrain: false,
            readingMore: false,
            dataEmitted: true,
            decoder: null,
            encoding: null,
            [Symbol(kPaused)]: false
          },
          _maxListeners: undefined,
          _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            finalCalled: true,
            needDrain: false,
            ending: true,
            ended: true,
            finished: false,
            destroyed: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function: bound onwrite],
            writecb: null,
            writelen: 0,
            afterWriteTickInfo: null,
            buffered: [],
            bufferedIndex: 0,
            allBuffers: true,
            allNoop: true,
            pendingcb: 1,
            constructed: true,
            prefinished: false,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: true,
            errored: null,
            closed: false,
            closeEmitted: false,
            [Symbol(kOnFinished)]: []
          },
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: undefined,
          _server: null,
          ssl: TLSWrap {
            _parent: [TCP],
            _parentWrap: undefined,
            _secureContext: [SecureContext],
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: {},
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _requestCert: true,
          _rejectUnauthorized: true,
          parser: null,
          _httpMessage: [Circular *2],
          [Symbol(res)]: TLSWrap {
            _parent: [TCP],
            _parentWrap: undefined,
            _secureContext: [SecureContext],
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: {},
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(verified)]: true,
          [Symbol(pendingSession)]: null,
          [Symbol(async_id_symbol)]: 11,
          [Symbol(kHandle)]: TLSWrap {
            _parent: [TCP],
            _parentWrap: undefined,
            _secureContext: [SecureContext],
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: {},
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: false,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 60,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(connect-options)]: {
            rejectUnauthorized: true,
            ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
            checkServerIdentity: [Function: checkServerIdentity],
            minDHSize: 1024,
            maxRedirects: 21,
            maxBodyLength: Infinity,
            protocol: 'https:',
            path: null,
            method: 'POST',
            headers: [Object: null prototype],
            agents: [Object],
            auth: undefined,
            family: undefined,
            lookup: undefined,
            beforeRedirect: [Function: dispatchBeforeRedirect],
            beforeRedirects: [Object],
            hostname: 'api-m.sandbox.paypal.com',
            port: 443,
            agent: undefined,
            nativeProtocols: [Object],
            pathname: '/v1/oauth2/token',
            _defaultAgent: [Agent],
            host: 'api-m.sandbox.paypal.com',
            servername: 'api-m.sandbox.paypal.com',
            _agentKey: 'api-m.sandbox.paypal.com:443:::::::::::::::::::::',
            encoding: null,
            singleUse: true
          },
          [Symbol(RequestTimeout)]: undefined
        },
        _consuming: true,
        _dumped: false,
        req: [Circular *2],
        responseUrl: 'https://api-m.sandbox.paypal.com/v1/oauth2/token',
        redirects: [],
        [Symbol(kCapture)]: false,
        [Symbol(kHeaders)]: {
          connection: 'close',
          'content-length': '447',
          server: 'Varnish',
          'retry-after': '0',
          'content-type': 'text/html; charset=utf-8',
          'accept-ranges': 'bytes',
          via: '1.1 varnish, 1.1 varnish',
          'edge-control': 'max-age=120',
          date: 'Wed, 05 Jul 2023 09:05:52 GMT',
          'x-served-by': 'cache-qpg1265-QPG, cache-maa10226-MAA',
          'x-cache': 'MISS, MISS',
          'x-cache-hits': '0, 0',
          'x-timer': 'S1688547953.520661,VS0,VE38'
        },
        [Symbol(kHeadersCount)]: 26,
        [Symbol(kTrailers)]: null,
        [Symbol(kTrailersCount)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'api-m.sandbox.paypal.com',
      protocol: 'https:',
      _redirectable: Writable {
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: true,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: true,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        _events: [Object: null prototype] {
          response: [Function: handleResponse],
          error: [Function: handleRequestError],
          socket: [Function: handleRequestSocket]
        },
        _eventsCount: 3,
        _maxListeners: undefined,
        _options: {
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: 'https:',
          path: '/v1/oauth2/token',
          method: 'POST',
          headers: [Object: null prototype] {
            Accept: 'application/json, text/plain, */*',
            'Content-Type': 'application/x-www-form-urlencoded',
            Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
            'User-Agent': 'axios/1.4.0',
            'Content-Length': '29',
            'Accept-Encoding': 'gzip, compress, deflate, br'
          },
          agents: { http: undefined, https: undefined },
          auth: undefined,
          family: undefined,
          lookup: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: { proxy: [Function: beforeRedirect] },
          hostname: 'api-m.sandbox.paypal.com',
          port: '',
          agent: undefined,
          nativeProtocols: { 'http:': [Object], 'https:': [Object] },
          pathname: '/v1/oauth2/token'
        },
        _ended: true,
        _ending: true,
        _redirectCount: 0,
        _redirects: [],
        _requestBodyLength: 29,
        _requestBodyBuffers: [],
        _onNativeResponse: [Function (anonymous)],
        _currentRequest: [Circular *2],
        _currentUrl: 'https://api-m.sandbox.paypal.com/v1/oauth2/token',
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kEndCalled)]: true,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype] {
        accept: [ 'Accept', 'application/json, text/plain, */*' ],
        'content-type': [ 'Content-Type', 'application/x-www-form-urlencoded' ],
        authorization: [
          'Authorization',
          'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k='
        ],
        'user-agent': [ 'User-Agent', 'axios/1.4.0' ],
        'content-length': [ 'Content-Length', '29' ],
        'accept-encoding': [ 'Accept-Encoding', 'gzip, compress, deflate, br' ],
        host: [ 'Host', 'api-m.sandbox.paypal.com' ]
      },
      [Symbol(kUniqueHeaders)]: null
    },
    data: '\n' +
      '<?xml version="1.0" encoding="utf-8"?>\n' +
      '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"\n' +
      ' "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\n' +
      '<html>\n' +
      '  <head>\n' +
      '    <title>503 No healthy backends</title>\n' +
      '  </head>\n' +
      '  <body>\n' +
      '    <h1>Error 503 No healthy backends</h1>\n' +
      '    <p>No healthy backends</p>\n' +
      '    <h3>Error 54113</h3>\n' +
      '    <p>Details: cache-qpg1265-QPG 1688547953 2117807090</p>\n' +
      '    <hr>\n' +
      '    <p>Varnish cache server</p>\n' +
      '  </body>\n' +
      '</html>\n'
  }
}

[info] i  functions: preparing functions directory for uploading... 
[info] i  functions: packaged /home/vinay/Projects/phyelements/orderself-consumer-ui-v1.0-main/functions (57.03 KB) for uploading 
[debug] [2023-07-05T09:05:52.603Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v1/projects/orderselfdb/locations/-/functions [none]
[debug] [2023-07-05T09:05:53.307Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v1/projects/orderselfdb/locations/-/functions 200
[debug] [2023-07-05T09:05:53.309Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v1/projects/orderselfdb/locations/-/functions {"functions":[{"name":"projects/orderselfdb/locations/us-central1/functions/deletePorterById","httpsTrigger":{"url":"https://us-central1-orderselfdb.cloudfunctions.net/deletePorterById","securityLevel":"SECURE_ALWAYS"},"status":"ACTIVE","entryPoint":"deletePorterById","timeout":"60s","availableMemoryMb":256,"updateTime":"2023-07-03T16:39:51.907Z","versionId":"43","labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"067b5eb485012bf57a19a7962f9a0aec7884914e"},"sourceUploadUrl":"https://storage.googleapis.com/uploads-799975052032.us-central1.cloudfunctions.appspot.com/93a08d70-ecf0-43f4-8a7d-333b0e42ec0d.zip","environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"orderselfdb\",\"storageBucket\":\"orderselfdb.appspot.com\",\"locationId\":\"europe-west\"}","GCLOUD_PROJECT":"orderselfdb","EVENTARC_CLOUD_EVENT_SOURCE":"projects/orderselfdb/locations/us-central1/functions/deletePorterById"},"runtime":"nodejs16","ingressSettings":"ALLOW_ALL","buildId":"48106fb5-f010-4b54-8b37-741e189e5c7b","buildEnvironmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"buildName":"projects/587486512635/locations/us-central1/builds/48106fb5-f010-4b54-8b37-741e189e5c7b","dockerRegistry":"ARTIFACT_REGISTRY"},{"name":"projects/orderselfdb/locations/us-central1/functions/ext-firestore-send-email-processQueue","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","sourceArchiveUrl":"gs://firebase-mod-sources-prod/ac863cc3a91a41ba0679d955d8bdaa4ba64eaac17f122e10ad911db902a4b4d2","eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/orderselfdb/databases/(default)/documents/mail/{id}","service":"firestore.googleapis.com","failurePolicy":{}},"status":"ACTIVE","entryPoint":"processQueue","timeout":"60s","availableMemoryMb":256,"serviceAccountEmail":"ext-firestore-send-email@orderselfdb.iam.gserviceaccount.com","updateTime":"2023-02-16T06:26:36.027Z","versionId":"2","labels":{"firebase-extensions-ar":"enabled","goog-dm":"firebase-ext-firestore-send-email","goog-firebase-ext":"firestore-send-email","deployment-tool":"firebase-extensions","goog-firebase-ext-iid":"firestore-send-email"},"environmentVariables":{"DATABASE_INSTANCE":"","DATABASE_URL":"","DEFAULT_FROM":"noreply-porterregistration@orderself.com","EXT_INSTANCE_ID":"firestore-send-email","FIREBASE_CONFIG":"{\"projectId\":\"orderselfdb\",\"databaseURL\":\"\",\"storageBucket\":\"orderselfdb.appspot.com\"}","GCLOUD_PROJECT":"orderselfdb","LOCATION":"us-central1","MAIL_COLLECTION":"mail","PROJECT_ID":"orderselfdb","SMTP_CONNECTION_URI":"smtp://reactdeveloper@gmail.com:Orderself@2023@hostname:465","STORAGE_BUCKET":"orderselfdb.appspot.com","TTL_EXPIRE_TYPE":"never","TTL_EXPIRE_VALUE":"1"},"runtime":"nodejs14","maxInstances":3000,"ingressSettings":"ALLOW_INTERNAL_ONLY","buildId":"8d6f8596-34b3-48da-8349-2ee864920fec","buildName":"projects/587486512635/locations/us-central1/builds/8d6f8596-34b3-48da-8349-2ee864920fec","dockerRegistry":"ARTIFACT_REGISTRY"},{"name":"projects/orderselfdb/locations/us-central1/functions/fnGetMenuItems","httpsTrigger":{"url":"https://us-central1-orderselfdb.cloudfunctions.net/fnGetMenuItems","securityLevel":"SECURE_ALWAYS"},"status":"ACTIVE","entryPoint":"fnGetMenuItems","timeout":"60s","availableMemoryMb":256,"serviceAccountEmail":"orderselfdb@appspot.gserviceaccount.com","updateTime":"2023-07-03T16:39:47.618Z","versionId":"35","labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"067b5eb485012bf57a19a7962f9a0aec7884914e"},"sourceUploadUrl":"https://storage.googleapis.com/uploads-799975052032.us-central1.cloudfunctions.appspot.com/93a08d70-ecf0-43f4-8a7d-333b0e42ec0d.zip","environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"orderselfdb\",\"storageBucket\":\"orderselfdb.appspot.com\",\"locationId\":\"europe-west\"}","GCLOUD_PROJECT":"orderselfdb","EVENTARC_CLOUD_EVENT_SOURCE":"projects/orderselfdb/locations/us-central1/functions/fnGetMenuItems"},"runtime":"nodejs16","ingressSettings":"ALLOW_ALL","buildId":"48106fb5-f010-4b54-8b37-741e189e5c7b","buildEnvironmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"buildName":"projects/587486512635/locations/us-central1/builds/48106fb5-f010-4b54-8b37-741e189e5c7b","dockerRegistry":"ARTIFACT_REGISTRY"},{"name":"projects/orderselfdb/locations/us-central1/functions/menuItemCsvUpload","httpsTrigger":{"url":"https://us-central1-orderselfdb.cloudfunctions.net/menuItemCsvUpload","securityLevel":"SECURE_ALWAYS"},"status":"ACTIVE","entryPoint":"menuItemCsvUpload","timeout":"60s","availableMemoryMb":256,"serviceAccountEmail":"orderselfdb@appspot.gserviceaccount.com","updateTime":"2023-07-03T16:39:51.404Z","versionId":"32","labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"067b5eb485012bf57a19a7962f9a0aec7884914e"},"sourceUploadUrl":"https://storage.googleapis.com/uploads-799975052032.us-central1.cloudfunctions.appspot.com/93a08d70-ecf0-43f4-8a7d-333b0e42ec0d.zip","environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"orderselfdb\",\"storageBucket\":\"orderselfdb.appspot.com\",\"locationId\":\"europe-west\"}","GCLOUD_PROJECT":"orderselfdb","EVENTARC_CLOUD_EVENT_SOURCE":"projects/orderselfdb/locations/us-central1/functions/menuItemCsvUpload"},"runtime":"nodejs16","ingressSettings":"ALLOW_ALL","buildId":"48106fb5-f010-4b54-8b37-741e189e5c7b","buildEnvironmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"buildName":"projects/587486512635/locations/us-central1/builds/48106fb5-f010-4b54-8b37-741e189e5c7b","dockerRegistry":"ARTIFACT_REGISTRY"},{"name":"projects/orderselfdb/locations/us-central1/functions/sendEmail","eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.create","resource":"projects/orderselfdb/databases/(default)/documents/porterRegistration/{id}","service":"firestore.googleapis.com","failurePolicy":{}},"status":"ACTIVE","entryPoint":"sendEmail","timeout":"60s","availableMemoryMb":256,"serviceAccountEmail":"orderselfdb@appspot.gserviceaccount.com","updateTime":"2023-07-03T16:39:50.152Z","versionId":"32","labels":{"deployment-tool":"cli-firebase","firebase-functions-hash":"067b5eb485012bf57a19a7962f9a0aec7884914e"},"sourceUploadUrl":"https://storage.googleapis.com/uploads-799975052032.us-central1.cloudfunctions.appspot.com/93a08d70-ecf0-43f4-8a7d-333b0e42ec0d.zip","environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"orderselfdb\",\"storageBucket\":\"orderselfdb.appspot.com\",\"locationId\":\"europe-west\"}","GCLOUD_PROJECT":"orderselfdb","EVENTARC_CLOUD_EVENT_SOURCE":"projects/orderselfdb/locations/us-central1/functions/sendEmail"},"runtime":"nodejs16","maxInstances":3000,"ingressSettings":"ALLOW_ALL","buildId":"48106fb5-f010-4b54-8b37-741e189e5c7b","buildEnvironmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"buildName":"projects/587486512635/locations/us-central1/builds/48106fb5-f010-4b54-8b37-741e189e5c7b","dockerRegistry":"ARTIFACT_REGISTRY"}]}
[debug] [2023-07-05T09:05:53.315Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/orderselfdb/locations/-/functions filter=environment%3D%22GEN_2%22
[debug] [2023-07-05T09:05:55.203Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/orderselfdb/locations/-/functions 200
[debug] [2023-07-05T09:05:55.203Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/orderselfdb/locations/-/functions {"functions":[{"name":"projects/orderselfdb/locations/us-central1/functions/getSellerStatus","buildConfig":{"build":"projects/587486512635/locations/us-central1/builds/d185e120-ef62-4632-86b1-c3fb4b69933a","runtime":"nodejs16","entryPoint":"getSellerStatus","source":{"storageSource":{"bucket":"gcf-v2-sources-587486512635-us-central1","object":"getSellerStatus/function-source.zip"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-587486512635-us-central1","object":"getSellerStatus/function-source.zip","generation":"1688525109086908"}}},"serviceConfig":{"service":"projects/orderselfdb/locations/us-central1/services/getsellerstatus","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"orderselfdb\",\"storageBucket\":\"orderselfdb.appspot.com\",\"locationId\":\"europe-west\"}","GCLOUD_PROJECT":"orderselfdb","EVENTARC_CLOUD_EVENT_SOURCE":"projects/orderselfdb/locations/us-central1/services/getSellerStatus"},"maxInstanceCount":100,"ingressSettings":"ALLOW_ALL","uri":"https://getsellerstatus-4u37ag2xcq-uc.a.run.app","serviceAccountEmail":"587486512635-compute@developer.gserviceaccount.com","availableMemory":"256Mi","allTrafficOnLatestRevision":true,"revision":"getsellerstatus-00003-vuy","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"state":"ACTIVE","updateTime":"2023-07-05T02:46:47.580370708Z","labels":{"deployment-tool":"cli-firebase","firebase-functions-hash":"9765e26d680123def1c31bc934129c3173fe75d9"},"environment":"GEN_2","url":"https://us-central1-orderselfdb.cloudfunctions.net/getSellerStatus"}]}
[info] i  functions: ensuring required API run.googleapis.com is enabled... 
[info] i  functions: ensuring required API eventarc.googleapis.com is enabled... 
[info] i  functions: ensuring required API pubsub.googleapis.com is enabled... 
[info] i  functions: ensuring required API storage.googleapis.com is enabled... 
[debug] [2023-07-05T09:05:55.216Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/run.googleapis.com [none]
[debug] [2023-07-05T09:05:55.216Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/run.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:05:55.219Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/eventarc.googleapis.com [none]
[debug] [2023-07-05T09:05:55.219Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/eventarc.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:05:55.221Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/pubsub.googleapis.com [none]
[debug] [2023-07-05T09:05:55.221Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/pubsub.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:05:55.223Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/storage.googleapis.com [none]
[debug] [2023-07-05T09:05:55.223Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/storage.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:05:56.910Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/run.googleapis.com 200
[debug] [2023-07-05T09:05:56.910Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/run.googleapis.com [omitted]
[info] ✔  functions: required API run.googleapis.com is enabled 
[debug] [2023-07-05T09:05:56.934Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/storage.googleapis.com 200
[debug] [2023-07-05T09:05:56.934Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/storage.googleapis.com [omitted]
[info] ✔  functions: required API storage.googleapis.com is enabled 
[debug] [2023-07-05T09:05:56.998Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/pubsub.googleapis.com 200
[debug] [2023-07-05T09:05:56.998Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/pubsub.googleapis.com [omitted]
[info] ✔  functions: required API pubsub.googleapis.com is enabled 
[debug] [2023-07-05T09:05:57.511Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/eventarc.googleapis.com 200
[debug] [2023-07-05T09:05:57.511Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/eventarc.googleapis.com [omitted]
[info] ✔  functions: required API eventarc.googleapis.com is enabled 
[info] i  functions: generating the service identity for pubsub.googleapis.com... 
[info] i  functions: generating the service identity for eventarc.googleapis.com... 
[debug] [2023-07-05T09:05:57.512Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1beta1/projects/587486512635/services/pubsub.googleapis.com:generateServiceIdentity [none]
[debug] [2023-07-05T09:05:57.513Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1beta1/projects/587486512635/services/eventarc.googleapis.com:generateServiceIdentity [none]
[debug] [2023-07-05T09:05:59.793Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1beta1/projects/587486512635/services/pubsub.googleapis.com:generateServiceIdentity 200
[debug] [2023-07-05T09:05:59.793Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/587486512635/services/pubsub.googleapis.com:generateServiceIdentity {"name":"operations/finished.DONE_OPERATION","done":true,"response":{"@type":"type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity","email":"service-587486512635@gcp-sa-pubsub.iam.gserviceaccount.com","uniqueId":"104509276031377170066"}}
[debug] [2023-07-05T09:05:59.805Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1beta1/projects/587486512635/services/eventarc.googleapis.com:generateServiceIdentity 200
[debug] [2023-07-05T09:05:59.805Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/587486512635/services/eventarc.googleapis.com:generateServiceIdentity {"name":"operations/finished.DONE_OPERATION","done":true,"response":{"@type":"type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity","email":"service-587486512635@gcp-sa-eventarc.iam.gserviceaccount.com","uniqueId":"114210900022737231548"}}
[debug] [2023-07-05T09:05:59.807Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb [none]
[debug] [2023-07-05T09:06:00.328Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb 200
[debug] [2023-07-05T09:06:00.328Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb {"projectId":"orderselfdb","projectNumber":"587486512635","displayName":"orderselfdb","name":"projects/orderselfdb","resources":{"hostingSite":"orderselfdb","storageBucket":"orderselfdb.appspot.com","locationId":"europe-west"},"state":"ACTIVE","etag":"1_f8f32fd8-e496-4c62-b5ac-18753a634b21"}
[debug] [2023-07-05T09:06:00.330Z] [functions] found 2 new HTTP functions, testing setIamPolicy permission...
[debug] [2023-07-05T09:06:00.330Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions [none]
[debug] [2023-07-05T09:06:00.330Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:06:00.330Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions {"permissions":["cloudfunctions.functions.setIamPolicy"]}
[debug] [2023-07-05T09:06:02.327Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions 200
[debug] [2023-07-05T09:06:02.329Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions {"permissions":["cloudfunctions.functions.setIamPolicy"]}
[debug] [2023-07-05T09:06:02.330Z] [functions] found setIamPolicy permission, proceeding with deploy
[debug] [2023-07-05T09:06:02.333Z] >>> [apiv2][query] POST https://cloudfunctions.googleapis.com/v2/projects/orderselfdb/locations/us-central1/functions:generateUploadUrl [none]
[debug] [2023-07-05T09:06:04.043Z] <<< [apiv2][status] POST https://cloudfunctions.googleapis.com/v2/projects/orderselfdb/locations/us-central1/functions:generateUploadUrl 200
[debug] [2023-07-05T09:06:04.044Z] <<< [apiv2][body] POST https://cloudfunctions.googleapis.com/v2/projects/orderselfdb/locations/us-central1/functions:generateUploadUrl {"uploadUrl":"https://storage.googleapis.com/gcf-v2-uploads-587486512635-us-central1/a1e703ff-d94d-4bc3-a3ac-84f5f7824a57.zip?GoogleAccessId=service-587486512635@gcf-admin-robot.iam.gserviceaccount.com&Expires=1688549763&Signature=NdXLNccVevCB19Bf7BKSbYHzo0BtrHctDNniEzgu%2Fd4V5C%2BmBaI5ymdeIsJYlqSRHVeKUQzEY8hBFo6ubTDw50c7ktb0nmHof%2FGSMcXndzSrwJK8Icf2hi2fnzDVflQJH3PmwtOBRdHSLM6cJHgVA78zO1NnCMSamUK5y52ykKRvqpw8S6d5wR5NVn9SXsJq7%2F7ykeDE0%2FBjpNo8s3Yq2cnNWOwJ%2BpoFeTMxAdl8%2B%2Fc2v2yyFpIzN64Sf8o8rCG6FCzkc4IzL6a5gPTe6vn6oCWlBsz4FDRRK37fA0boYem2%2FWtfTftBgAmAWnWqV7LFjq80lJTLBWpQEDLOdjtBsw%3D%3D","storageSource":{"bucket":"gcf-v2-uploads-587486512635-us-central1","object":"a1e703ff-d94d-4bc3-a3ac-84f5f7824a57.zip"}}
[debug] [2023-07-05T09:06:04.047Z] >>> [apiv2][query] PUT https://storage.googleapis.com/gcf-v2-uploads-587486512635-us-central1/a1e703ff-d94d-4bc3-a3ac-84f5f7824a57.zip GoogleAccessId=service-587486512635%40gcf-admin-robot.iam.gserviceaccount.com&Expires=1688549763&Signature=NdXLNccVevCB19Bf7BKSbYHzo0BtrHctDNniEzgu%2Fd4V5C%2BmBaI5ymdeIsJYlqSRHVeKUQzEY8hBFo6ubTDw50c7ktb0nmHof%2FGSMcXndzSrwJK8Icf2hi2fnzDVflQJH3PmwtOBRdHSLM6cJHgVA78zO1NnCMSamUK5y52ykKRvqpw8S6d5wR5NVn9SXsJq7%2F7ykeDE0%2FBjpNo8s3Yq2cnNWOwJ%2BpoFeTMxAdl8%2B%2Fc2v2yyFpIzN64Sf8o8rCG6FCzkc4IzL6a5gPTe6vn6oCWlBsz4FDRRK37fA0boYem2%2FWtfTftBgAmAWnWqV7LFjq80lJTLBWpQEDLOdjtBsw%3D%3D
[debug] [2023-07-05T09:06:04.048Z] >>> [apiv2][body] PUT https://storage.googleapis.com/gcf-v2-uploads-587486512635-us-central1/a1e703ff-d94d-4bc3-a3ac-84f5f7824a57.zip [stream]
[debug] [2023-07-05T09:06:05.049Z] <<< [apiv2][status] PUT https://storage.googleapis.com/gcf-v2-uploads-587486512635-us-central1/a1e703ff-d94d-4bc3-a3ac-84f5f7824a57.zip 200
[debug] [2023-07-05T09:06:05.050Z] <<< [apiv2][body] PUT https://storage.googleapis.com/gcf-v2-uploads-587486512635-us-central1/a1e703ff-d94d-4bc3-a3ac-84f5f7824a57.zip [omitted]
[info] ✔  functions: functions folder uploaded successfully 
[info] 
The following functions are found in your project but do not exist in your local source code:
	deletePorterById(us-central1)
	fnGetMenuItems(us-central1)
	menuItemCsvUpload(us-central1)
	sendEmail(us-central1)

If you are renaming a function or changing its region, it is recommended that you create the new function first before deleting the old one to prevent event loss. For more info, visit https://firebase.google.com/docs/functions/manage-functions#modify

[debug] [2023-07-05T09:06:43.237Z] ----------------------------------------------------------------------
[debug] [2023-07-05T09:06:43.238Z] Command:       /home/vinay/.nvm/versions/node/v16.20.0/bin/node /home/vinay/.nvm/versions/node/v16.20.0/bin/firebase deploy --only functions
[debug] [2023-07-05T09:06:43.239Z] CLI Version:   12.4.2
[debug] [2023-07-05T09:06:43.239Z] Platform:      linux
[debug] [2023-07-05T09:06:43.239Z] Node Version:  v16.20.0
[debug] [2023-07-05T09:06:43.239Z] Time:          Wed Jul 05 2023 14:36:43 GMT+0530 (India Standard Time)
[debug] [2023-07-05T09:06:43.239Z] ----------------------------------------------------------------------
[debug] 
[debug] [2023-07-05T09:06:43.293Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-07-05T09:06:43.293Z] > authorizing via signed-in user (reactdeveloper@phyelements.com)
[debug] [2023-07-05T09:06:43.293Z] [iam] checking project orderselfdb for permissions ["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]
[debug] [2023-07-05T09:06:43.295Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions [none]
[debug] [2023-07-05T09:06:43.295Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:06:43.295Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions {"permissions":["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]}
[debug] [2023-07-05T09:06:44.622Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions 200
[debug] [2023-07-05T09:06:44.623Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions {"permissions":["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]}
[debug] [2023-07-05T09:06:44.623Z] >>> [apiv2][query] POST https://iam.googleapis.com/v1/projects/orderselfdb/serviceAccounts/orderselfdb@appspot.gserviceaccount.com:testIamPermissions [none]
[debug] [2023-07-05T09:06:44.624Z] >>> [apiv2][body] POST https://iam.googleapis.com/v1/projects/orderselfdb/serviceAccounts/orderselfdb@appspot.gserviceaccount.com:testIamPermissions {"permissions":["iam.serviceAccounts.actAs"]}
[debug] [2023-07-05T09:06:45.943Z] <<< [apiv2][status] POST https://iam.googleapis.com/v1/projects/orderselfdb/serviceAccounts/orderselfdb@appspot.gserviceaccount.com:testIamPermissions 200
[debug] [2023-07-05T09:06:45.944Z] <<< [apiv2][body] POST https://iam.googleapis.com/v1/projects/orderselfdb/serviceAccounts/orderselfdb@appspot.gserviceaccount.com:testIamPermissions {"permissions":["iam.serviceAccounts.actAs"]}
[info] 
[info] === Deploying to 'orderselfdb'...
[info] 
[info] i  deploying functions 
[debug] [2023-07-05T09:06:45.949Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb [none]
[debug] [2023-07-05T09:06:46.659Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb 200
[debug] [2023-07-05T09:06:46.660Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb {"projectId":"orderselfdb","projectNumber":"587486512635","displayName":"orderselfdb","name":"projects/orderselfdb","resources":{"hostingSite":"orderselfdb","storageBucket":"orderselfdb.appspot.com","locationId":"europe-west"},"state":"ACTIVE","etag":"1_f8f32fd8-e496-4c62-b5ac-18753a634b21"}
[info] i  functions: preparing codebase default for deployment 
[info] i  functions: ensuring required API cloudfunctions.googleapis.com is enabled... 
[info] i  functions: ensuring required API cloudbuild.googleapis.com is enabled... 
[info] i  artifactregistry: ensuring required API artifactregistry.googleapis.com is enabled... 
[debug] [2023-07-05T09:06:46.662Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudfunctions.googleapis.com [none]
[debug] [2023-07-05T09:06:46.662Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudfunctions.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:06:46.663Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/runtimeconfig.googleapis.com [none]
[debug] [2023-07-05T09:06:46.664Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/runtimeconfig.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:06:46.665Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudbuild.googleapis.com [none]
[debug] [2023-07-05T09:06:46.665Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudbuild.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:06:46.666Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/artifactregistry.googleapis.com [none]
[debug] [2023-07-05T09:06:46.666Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/artifactregistry.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:06:48.399Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/runtimeconfig.googleapis.com 200
[debug] [2023-07-05T09:06:48.400Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/runtimeconfig.googleapis.com [omitted]
[debug] [2023-07-05T09:06:48.401Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudbuild.googleapis.com 200
[debug] [2023-07-05T09:06:48.401Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudbuild.googleapis.com [omitted]
[info] ✔  functions: required API cloudbuild.googleapis.com is enabled 
[debug] [2023-07-05T09:06:48.413Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/artifactregistry.googleapis.com 200
[debug] [2023-07-05T09:06:48.413Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/artifactregistry.googleapis.com [omitted]
[info] ✔  artifactregistry: required API artifactregistry.googleapis.com is enabled 
[debug] [2023-07-05T09:06:48.417Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudfunctions.googleapis.com 200
[debug] [2023-07-05T09:06:48.418Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/cloudfunctions.googleapis.com [omitted]
[info] ✔  functions: required API cloudfunctions.googleapis.com is enabled 
[debug] [2023-07-05T09:06:48.418Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb/adminSdkConfig [none]
[debug] [2023-07-05T09:06:48.911Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb/adminSdkConfig 200
[debug] [2023-07-05T09:06:48.912Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb/adminSdkConfig {"projectId":"orderselfdb","storageBucket":"orderselfdb.appspot.com","locationId":"europe-west"}
[debug] [2023-07-05T09:06:48.914Z] >>> [apiv2][query] GET https://runtimeconfig.googleapis.com/v1beta1/projects/orderselfdb/configs [none]
[debug] [2023-07-05T09:06:50.346Z] <<< [apiv2][status] GET https://runtimeconfig.googleapis.com/v1beta1/projects/orderselfdb/configs 200
[debug] [2023-07-05T09:06:50.346Z] <<< [apiv2][body] GET https://runtimeconfig.googleapis.com/v1beta1/projects/orderselfdb/configs {}
[debug] [2023-07-05T09:06:50.348Z] Validating nodejs source
[debug] [2023-07-05T09:06:51.202Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "serve": "firebase emulators:start --only functions",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "index.js",
  "dependencies": {
    "@google-cloud/firestore": "^6.6.1",
    "axios": "^1.4.0",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "express": "^4.18.2",
    "firebase": "^9.23.0",
    "firebase-admin": "^10.3.0",
    "firebase-functions": "^4.4.1"
  },
  "devDependencies": {
    "firebase-functions-test": "^0.2.0"
  },
  "private": true
}
[debug] [2023-07-05T09:06:51.202Z] Building nodejs source
[info] i  functions: Loading and anaylzing source code for codebase default to determine what to deploy 
[debug] [2023-07-05T09:06:51.203Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-07-05T09:06:51.207Z] Found firebase-functions binary at '/home/vinay/Projects/phyelements/orderself-consumer-ui-v1.0-main/functions/node_modules/.bin/firebase-functions'
[info] Serving at port 8581

[debug] [2023-07-05T09:06:51.445Z] Got response from /__/functions.yaml {"endpoints":{"getSellerStatus":{"availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"concurrency":null,"serviceAccountEmail":null,"vpc":null,"platform":"gcfv2","labels":{},"httpsTrigger":{},"entryPoint":"getSellerStatus"},"createPaypalOrder-createOrder":{"availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"concurrency":null,"serviceAccountEmail":null,"vpc":null,"platform":"gcfv2","labels":{},"httpsTrigger":{},"entryPoint":"createPaypalOrder.createOrder"},"sellerVerification-sellerVerification":{"availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"concurrency":null,"serviceAccountEmail":null,"vpc":null,"platform":"gcfv2","labels":{},"httpsTrigger":{},"entryPoint":"sellerVerification.sellerVerification"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[info] shutdown requested via /__/quitquitquit

[error] 
/home/vinay/Projects/phyelements/orderself-consumer-ui-v1.0-main/functions/node_modules/axios/dist/node/axios.cjs:1909
    reject(new AxiosError(
           ^

[error] AxiosError: Request failed with status code 502
    at settle (/home/vinay/Projects/phyelements/orderself-consumer-ui-v1.0-main/functions/node_modules/axios/dist/node/axios.cjs:1909:12)
    at IncomingMessage.handleStreamEnd (/home/vinay/Projects/phyelements/orderself-consumer-ui-v1.0-main/functions/node_modules/axios/dist/node/axios.cjs:2989:11)
    at IncomingMessage.emit (node:events:525:35)
    at endReadableNT (node:internal/streams/readable:1358:12)
    at processTicksAndRejections (node:internal/process/task_queues:83:21) {
  code: 'ERR_BAD_RESPONSE',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData] {
        LINE_BREAK: '\r\n',
        DEFAULT_CONTENT_TYPE: 'application/octet-stream'
      },
      Blob: null
    },
    validateStatus: [Function: validateStatus],
    headers: AxiosHeaders {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/x-www-form-urlencoded',
      Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
      'User-Agent': 'axios/1.4.0',
      'Content-Length': '29',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    method: 'post',
    url: 'https://api-m.sandbox.paypal.com/v1/oauth2/token',
    data: 'grant_type=client_credentials'
  },
  request: <ref *2> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: '29',
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    socket: <ref *1> TLSSocket {
      _tlsOptions: {
        allowHalfOpen: undefined,
        pipe: false,
        secureContext: SecureContext { context: SecureContext {} },
        isServer: false,
        requestCert: true,
        rejectUnauthorized: true,
        session: undefined,
        ALPNProtocols: undefined,
        requestOCSP: undefined,
        enableTrace: undefined,
        pskCallback: undefined,
        highWaterMark: undefined,
        onread: undefined,
        signal: undefined
      },
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'api-m.sandbox.paypal.com',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype] {
        close: [
          [Function: onSocketCloseDestroySSL],
          [Function: bound onceWrapper] {
            listener: [Function (anonymous)]
          },
          [Function: onClose],
          [Function: socketCloseListener]
        ],
        end: [Function: onReadableStreamEnd],
        newListener: [Function: keylogNewListener],
        secure: [Function: onConnectSecure],
        session: [Function (anonymous)],
        free: [Function: onFree],
        timeout: [Function: onTimeout],
        agentRemove: [Function: onRemove],
        error: [Function: socketErrorListener],
        finish: [Function: bound onceWrapper] { listener: [Function: destroy] }
      },
      _eventsCount: 10,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'api-m.sandbox.paypal.com',
      _closeAfterHandlingError: false,
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        constructed: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: true,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: true,
        needDrain: false,
        ending: true,
        ended: true,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        buffered: [],
        bufferedIndex: 0,
        allBuffers: true,
        allNoop: true,
        pendingcb: 1,
        constructed: true,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: true,
        errored: null,
        closed: false,
        closeEmitted: false,
        [Symbol(kOnFinished)]: []
      },
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: TLSWrap {
        _parent: TCP {
          reading: [Getter/Setter],
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _parentWrap: undefined,
        _secureContext: SecureContext { context: SecureContext {} },
        reading: true,
        onkeylog: [Function: onkeylog],
        onhandshakestart: {},
        onhandshakedone: [Function (anonymous)],
        onocspresponse: [Function: onocspresponse],
        onnewsession: [Function: onnewsessionclient],
        onerror: [Function: onerror],
        [Symbol(owner_symbol)]: [Circular *1]
      },
      _requestCert: true,
      _rejectUnauthorized: true,
      parser: null,
      _httpMessage: [Circular *2],
      [Symbol(res)]: TLSWrap {
        _parent: TCP {
          reading: [Getter/Setter],
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _parentWrap: undefined,
        _secureContext: SecureContext { context: SecureContext {} },
        reading: true,
        onkeylog: [Function: onkeylog],
        onhandshakestart: {},
        onhandshakedone: [Function (anonymous)],
        onocspresponse: [Function: onocspresponse],
        onnewsession: [Function: onnewsessionclient],
        onerror: [Function: onerror],
        [Symbol(owner_symbol)]: [Circular *1]
      },
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 11,
      [Symbol(kHandle)]: TLSWrap {
        _parent: TCP {
          reading: [Getter/Setter],
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _parentWrap: undefined,
        _secureContext: SecureContext { context: SecureContext {} },
        reading: true,
        onkeylog: [Function: onkeylog],
        onhandshakestart: {},
        onhandshakedone: [Function (anonymous)],
        onocspresponse: [Function: onocspresponse],
        onnewsession: [Function: onnewsessionclient],
        onerror: [Function: onerror],
        [Symbol(owner_symbol)]: [Circular *1]
      },
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: {
        rejectUnauthorized: true,
        ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
        checkServerIdentity: [Function: checkServerIdentity],
        minDHSize: 1024,
        maxRedirects: 21,
        maxBodyLength: Infinity,
        protocol: 'https:',
        path: null,
        method: 'POST',
        headers: [Object: null prototype] {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/x-www-form-urlencoded',
          Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
          'User-Agent': 'axios/1.4.0',
          'Content-Length': '29',
          'Accept-Encoding': 'gzip, compress, deflate, br'
        },
        agents: { http: undefined, https: undefined },
        auth: undefined,
        family: undefined,
        lookup: undefined,
        beforeRedirect: [Function: dispatchBeforeRedirect],
        beforeRedirects: { proxy: [Function: beforeRedirect] },
        hostname: 'api-m.sandbox.paypal.com',
        port: 443,
        agent: undefined,
        nativeProtocols: {
          'http:': {
            _connectionListener: [Function: connectionListener],
            METHODS: [Array],
            STATUS_CODES: [Object],
            Agent: [Function],
            ClientRequest: [Function: ClientRequest],
            IncomingMessage: [Function: IncomingMessage],
            OutgoingMessage: [Function: OutgoingMessage],
            Server: [Function: Server],
            ServerResponse: [Function: ServerResponse],
            createServer: [Function: createServer],
            validateHeaderName: [Function: __node_internal_],
            validateHeaderValue: [Function: __node_internal_],
            get: [Function: get],
            request: [Function: request],
            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
            maxHeaderSize: [Getter],
            globalAgent: [Getter/Setter]
          },
          'https:': {
            Agent: [Function: Agent],
            globalAgent: [Agent],
            Server: [Function: Server],
            createServer: [Function: createServer],
            get: [Function: get],
            request: [Function: request]
          }
        },
        pathname: '/v1/oauth2/token',
        _defaultAgent: Agent {
          _events: [Object: null prototype] {
            free: [Function (anonymous)],
            newListener: [Function: maybeEnableKeylog]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 443,
          protocol: 'https:',
          options: [Object: null prototype] { path: null },
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype] {
            'api-m.sandbox.paypal.com:443:::::::::::::::::::::': [Array]
          },
          freeSockets: [Object: null prototype] {},
          keepAliveMsecs: 1000,
          keepAlive: false,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          maxCachedSessions: 100,
          _sessionCache: { map: [Object], list: [Array] },
          [Symbol(kCapture)]: false
        },
        host: 'api-m.sandbox.paypal.com',
        servername: 'api-m.sandbox.paypal.com',
        _agentKey: 'api-m.sandbox.paypal.com:443:::::::::::::::::::::',
        encoding: null,
        singleUse: true
      },
      [Symbol(RequestTimeout)]: undefined
    },
    _header: 'POST /v1/oauth2/token HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/x-www-form-urlencoded\r\n' +
      'Authorization: Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=\r\n' +
      'User-Agent: axios/1.4.0\r\n' +
      'Content-Length: 29\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: api-m.sandbox.paypal.com\r\n' +
      'Connection: close\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype] {
        free: [Function (anonymous)],
        newListener: [Function: maybeEnableKeylog]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype] { path: null },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {
        'api-m.sandbox.paypal.com:443:::::::::::::::::::::': [
          <ref *1> TLSSocket {
            _tlsOptions: [Object],
            _secureEstablished: true,
            _securePending: false,
            _newSessionPending: false,
            _controlReleased: true,
            secureConnecting: false,
            _SNICallback: null,
            servername: 'api-m.sandbox.paypal.com',
            alpnProtocol: false,
            authorized: true,
            authorizationError: null,
            encrypted: true,
            _events: [Object: null prototype],
            _eventsCount: 10,
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'api-m.sandbox.paypal.com',
            _closeAfterHandlingError: false,
            _readableState: [ReadableState],
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: undefined,
            _server: null,
            ssl: [TLSWrap],
            _requestCert: true,
            _rejectUnauthorized: true,
            parser: null,
            _httpMessage: [Circular *2],
            [Symbol(res)]: [TLSWrap],
            [Symbol(verified)]: true,
            [Symbol(pendingSession)]: null,
            [Symbol(async_id_symbol)]: 11,
            [Symbol(kHandle)]: [TLSWrap],
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kSetNoDelay)]: false,
            [Symbol(kSetKeepAlive)]: true,
            [Symbol(kSetKeepAliveInitialDelay)]: 60,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0,
            [Symbol(connect-options)]: [Object],
            [Symbol(RequestTimeout)]: undefined
          }
        ]
      },
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: {
        map: {
          'api-m.sandbox.paypal.com:443:::::::::::::::::::::': Buffer(2923) [Uint8Array] [
             48, 130,  11, 103,   2,   1,   1,   2,   2,   3,   4,   4,
              2,  19,   2,   4,  32,  43,  36, 239, 144, 242,  62, 119,
            246, 161, 111, 146, 155, 130,  19, 173, 125,  54,  88, 124,
            240,  22,  34,  77,  87, 142,  89,  47, 251, 186,  18, 238,
            240,   4,  48, 188,   7,  72,  70, 178, 142,  56, 105, 166,
            169,  95, 232, 245, 115,  39, 155,  43,  18,  96,  58, 141,
            175,  32,  37, 101,  92,  21, 251, 192, 203,  72,   8, 245,
            200, 239, 120,  13,  92,  44, 220,  14, 236, 112, 113, 144,
            243, 178, 135, 161,
            ... 2823 more items
          ]
        },
        list: [ 'api-m.sandbox.paypal.com:443:::::::::::::::::::::' ]
      },
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'POST',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    path: '/v1/oauth2/token',
    _ended: true,
    res: IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        constructed: true,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        destroyed: true,
        errored: null,
        closed: true,
        closeEmitted: true,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: true,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] {
        end: [ [Function: responseOnEnd], [Function: handleStreamEnd] ],
        error: [Function: handleStreamError],
        data: [Function: handleStreamData],
        aborted: [Function: handlerStreamAborted]
      },
      _eventsCount: 4,
      _maxListeners: undefined,
      socket: <ref *1> TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'api-m.sandbox.paypal.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function],
            [Function: onClose],
            [Function: socketCloseListener]
          ],
          end: [Function: onReadableStreamEnd],
          newListener: [Function: keylogNewListener],
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          error: [Function: socketErrorListener],
          finish: [Function: bound onceWrapper] {
            listener: [Function: destroy]
          }
        },
        _eventsCount: 10,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'api-m.sandbox.paypal.com',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: true,
          needDrain: false,
          ending: true,
          ended: true,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 1,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular *2],
        [Symbol(res)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: 11,
        [Symbol(kHandle)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 60,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: 'https:',
          path: null,
          method: 'POST',
          headers: [Object: null prototype] {
            Accept: 'application/json, text/plain, */*',
            'Content-Type': 'application/x-www-form-urlencoded',
            Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
            'User-Agent': 'axios/1.4.0',
            'Content-Length': '29',
            'Accept-Encoding': 'gzip, compress, deflate, br'
          },
          agents: { http: undefined, https: undefined },
          auth: undefined,
          family: undefined,
          lookup: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: { proxy: [Function: beforeRedirect] },
          hostname: 'api-m.sandbox.paypal.com',
          port: 443,
          agent: undefined,
          nativeProtocols: { 'http:': [Object], 'https:': [Object] },
          pathname: '/v1/oauth2/token',
          _defaultAgent: Agent {
            _events: [Object: null prototype],
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype],
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype],
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: false,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: [Object],
            [Symbol(kCapture)]: false
          },
          host: 'api-m.sandbox.paypal.com',
          servername: 'api-m.sandbox.paypal.com',
          _agentKey: 'api-m.sandbox.paypal.com:443:::::::::::::::::::::',
          encoding: null,
          singleUse: true
        },
        [Symbol(RequestTimeout)]: undefined
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Connection',
        'close',
        'Content-Length',
        '150',
        'Content-Type',
        'text/html',
        'Server',
        'nginx',
        'Strict-Transport-Security',
        'max-age=31536000; includeSubDomains',
        'Accept-Ranges',
        'bytes',
        'Via',
        '1.1 varnish, 1.1 varnish',
        'Edge-Control',
        'max-age=120',
        'Date',
        'Wed, 05 Jul 2023 09:06:59 GMT',
        'X-Served-By',
        'cache-qpg1273-QPG, cache-maa10236-MAA',
        'X-Cache',
        'MISS, MISS',
        'X-Cache-Hits',
        '0, 0',
        'X-Timer',
        'S1688548012.982402,VS0,VE7335'
      ],
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 502,
      statusMessage: 'Bad Gateway',
      client: <ref *1> TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'api-m.sandbox.paypal.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function],
            [Function: onClose],
            [Function: socketCloseListener]
          ],
          end: [Function: onReadableStreamEnd],
          newListener: [Function: keylogNewListener],
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          error: [Function: socketErrorListener],
          finish: [Function: bound onceWrapper] {
            listener: [Function: destroy]
          }
        },
        _eventsCount: 10,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'api-m.sandbox.paypal.com',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: true,
          needDrain: false,
          ending: true,
          ended: true,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 1,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular *2],
        [Symbol(res)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: 11,
        [Symbol(kHandle)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 60,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: 'https:',
          path: null,
          method: 'POST',
          headers: [Object: null prototype] {
            Accept: 'application/json, text/plain, */*',
            'Content-Type': 'application/x-www-form-urlencoded',
            Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
            'User-Agent': 'axios/1.4.0',
            'Content-Length': '29',
            'Accept-Encoding': 'gzip, compress, deflate, br'
          },
          agents: { http: undefined, https: undefined },
          auth: undefined,
          family: undefined,
          lookup: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: { proxy: [Function: beforeRedirect] },
          hostname: 'api-m.sandbox.paypal.com',
          port: 443,
          agent: undefined,
          nativeProtocols: { 'http:': [Object], 'https:': [Object] },
          pathname: '/v1/oauth2/token',
          _defaultAgent: Agent {
            _events: [Object: null prototype],
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype],
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype],
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: false,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: [Object],
            [Symbol(kCapture)]: false
          },
          host: 'api-m.sandbox.paypal.com',
          servername: 'api-m.sandbox.paypal.com',
          _agentKey: 'api-m.sandbox.paypal.com:443:::::::::::::::::::::',
          encoding: null,
          singleUse: true
        },
        [Symbol(RequestTimeout)]: undefined
      },
      _consuming: true,
      _dumped: false,
      req: [Circular *2],
      responseUrl: 'https://api-m.sandbox.paypal.com/v1/oauth2/token',
      redirects: [],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        connection: 'close',
        'content-length': '150',
        'content-type': 'text/html',
        server: 'nginx',
        'strict-transport-security': 'max-age=31536000; includeSubDomains',
        'accept-ranges': 'bytes',
        via: '1.1 varnish, 1.1 varnish',
        'edge-control': 'max-age=120',
        date: 'Wed, 05 Jul 2023 09:06:59 GMT',
        'x-served-by': 'cache-qpg1273-QPG, cache-maa10236-MAA',
        'x-cache': 'MISS, MISS',
        'x-cache-hits': '0, 0',
        'x-timer': 'S1688548012.982402,VS0,VE7335'
      },
      [Symbol(kHeadersCount)]: 26,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'api-m.sandbox.paypal.com',
    protocol: 'https:',
    _redirectable: Writable {
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        buffered: [],
        bufferedIndex: 0,
        allBuffers: true,
        allNoop: true,
        pendingcb: 0,
        constructed: true,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        errored: null,
        closed: false,
        closeEmitted: false,
        [Symbol(kOnFinished)]: []
      },
      _events: [Object: null prototype] {
        response: [Function: handleResponse],
        error: [Function: handleRequestError],
        socket: [Function: handleRequestSocket]
      },
      _eventsCount: 3,
      _maxListeners: undefined,
      _options: {
        maxRedirects: 21,
        maxBodyLength: Infinity,
        protocol: 'https:',
        path: '/v1/oauth2/token',
        method: 'POST',
        headers: [Object: null prototype] {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/x-www-form-urlencoded',
          Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
          'User-Agent': 'axios/1.4.0',
          'Content-Length': '29',
          'Accept-Encoding': 'gzip, compress, deflate, br'
        },
        agents: { http: undefined, https: undefined },
        auth: undefined,
        family: undefined,
        lookup: undefined,
        beforeRedirect: [Function: dispatchBeforeRedirect],
        beforeRedirects: { proxy: [Function: beforeRedirect] },
        hostname: 'api-m.sandbox.paypal.com',
        port: '',
        agent: undefined,
        nativeProtocols: {
          'http:': {
            _connectionListener: [Function: connectionListener],
            METHODS: [Array],
            STATUS_CODES: [Object],
            Agent: [Function],
            ClientRequest: [Function: ClientRequest],
            IncomingMessage: [Function: IncomingMessage],
            OutgoingMessage: [Function: OutgoingMessage],
            Server: [Function: Server],
            ServerResponse: [Function: ServerResponse],
            createServer: [Function: createServer],
            validateHeaderName: [Function: __node_internal_],
            validateHeaderValue: [Function: __node_internal_],
            get: [Function: get],
            request: [Function: request],
            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
            maxHeaderSize: [Getter],
            globalAgent: [Getter/Setter]
          },
          'https:': {
            Agent: [Function: Agent],
            globalAgent: [Agent],
            Server: [Function: Server],
            createServer: [Function: createServer],
            get: [Function: get],
            request: [Function: request]
          }
        },
        pathname: '/v1/oauth2/token'
      },
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 29,
      _requestBodyBuffers: [],
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *2],
      _currentUrl: 'https://api-m.sandbox.paypal.com/v1/oauth2/token',
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kEndCalled)]: true,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [ 'Accept', 'application/json, text/plain, */*' ],
      'content-type': [ 'Content-Type', 'application/x-www-form-urlencoded' ],
      authorization: [
        'Authorization',
        'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k='
      ],
      'user-agent': [ 'User-Agent', 'axios/1.4.0' ],
      'content-length': [ 'Content-Length', '29' ],
      'accept-encoding': [ 'Accept-Encoding', 'gzip, compress, deflate, br' ],
      host: [ 'Host', 'api-m.sandbox.paypal.com' ]
    },
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 502,
    statusText: 'Bad Gateway',
    headers: AxiosHeaders {
      connection: 'close',
      'content-length': '150',
      'content-type': 'text/html',
      server: 'nginx',
      'strict-transport-security': 'max-age=31536000; includeSubDomains',
      'accept-ranges': 'bytes',
      via: '1.1 varnish, 1.1 varnish',
      'edge-control': 'max-age=120',
      date: 'Wed, 05 Jul 2023 09:06:59 GMT',
      'x-served-by': 'cache-qpg1273-QPG, cache-maa10236-MAA',
      'x-cache': 'MISS, MISS',
      'x-cache-hits': '0, 0',
      'x-timer': 'S1688548012.982402,VS0,VE7335'
    },
    config: {
      transitional: {
        silentJSONParsing: true,
        forcedJSONParsing: true,
        clarifyTimeoutError: false
      },
      adapter: [ 'xhr', 'http' ],
      transformRequest: [ [Function: transformRequest] ],
      transformResponse: [ [Function: transformResponse] ],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: [Function: FormData] {
          LINE_BREAK: '\r\n',
          DEFAULT_CONTENT_TYPE: 'application/octet-stream'
        },
        Blob: null
      },
      validateStatus: [Function: validateStatus],
      headers: AxiosHeaders {
        Accept: 'application/json, text/plain, */*',
        'Content-Type': 'application/x-www-form-urlencoded',
        Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
        'User-Agent': 'axios/1.4.0',
        'Content-Length': '29',
        'Accept-Encoding': 'gzip, compress, deflate, br'
      },
      method: 'post',
      url: 'https://api-m.sandbox.paypal.com/v1/oauth2/token',
      data: 'grant_type=client_credentials'
    },
    request: <ref *2> ClientRequest {
      _events: [Object: null prototype] {
        abort: [Function (anonymous)],
        aborted: [Function (anonymous)],
        connect: [Function (anonymous)],
        error: [Function (anonymous)],
        socket: [Function (anonymous)],
        timeout: [Function (anonymous)],
        finish: [Function: requestOnFinish]
      },
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: '29',
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      socket: <ref *1> TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'api-m.sandbox.paypal.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function],
            [Function: onClose],
            [Function: socketCloseListener]
          ],
          end: [Function: onReadableStreamEnd],
          newListener: [Function: keylogNewListener],
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          error: [Function: socketErrorListener],
          finish: [Function: bound onceWrapper] {
            listener: [Function: destroy]
          }
        },
        _eventsCount: 10,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'api-m.sandbox.paypal.com',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: true,
          needDrain: false,
          ending: true,
          ended: true,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 1,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular *2],
        [Symbol(res)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: 11,
        [Symbol(kHandle)]: TLSWrap {
          _parent: TCP {
            reading: [Getter/Setter],
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _parentWrap: undefined,
          _secureContext: SecureContext { context: SecureContext {} },
          reading: true,
          onkeylog: [Function: onkeylog],
          onhandshakestart: {},
          onhandshakedone: [Function (anonymous)],
          onocspresponse: [Function: onocspresponse],
          onnewsession: [Function: onnewsessionclient],
          onerror: [Function: onerror],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 60,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: 'https:',
          path: null,
          method: 'POST',
          headers: [Object: null prototype] {
            Accept: 'application/json, text/plain, */*',
            'Content-Type': 'application/x-www-form-urlencoded',
            Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
            'User-Agent': 'axios/1.4.0',
            'Content-Length': '29',
            'Accept-Encoding': 'gzip, compress, deflate, br'
          },
          agents: { http: undefined, https: undefined },
          auth: undefined,
          family: undefined,
          lookup: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: { proxy: [Function: beforeRedirect] },
          hostname: 'api-m.sandbox.paypal.com',
          port: 443,
          agent: undefined,
          nativeProtocols: { 'http:': [Object], 'https:': [Object] },
          pathname: '/v1/oauth2/token',
          _defaultAgent: Agent {
            _events: [Object: null prototype],
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype],
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype],
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: false,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: [Object],
            [Symbol(kCapture)]: false
          },
          host: 'api-m.sandbox.paypal.com',
          servername: 'api-m.sandbox.paypal.com',
          _agentKey: 'api-m.sandbox.paypal.com:443:::::::::::::::::::::',
          encoding: null,
          singleUse: true
        },
        [Symbol(RequestTimeout)]: undefined
      },
      _header: 'POST /v1/oauth2/token HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/x-www-form-urlencoded\r\n' +
        'Authorization: Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=\r\n' +
        'User-Agent: axios/1.4.0\r\n' +
        'Content-Length: 29\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: api-m.sandbox.paypal.com\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: Agent {
        _events: [Object: null prototype] {
          free: [Function (anonymous)],
          newListener: [Function: maybeEnableKeylog]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: [Object: null prototype] { path: null },
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype] {
          'api-m.sandbox.paypal.com:443:::::::::::::::::::::': [ [TLSSocket] ]
        },
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        scheduling: 'lifo',
        maxTotalSockets: Infinity,
        totalSocketCount: 1,
        maxCachedSessions: 100,
        _sessionCache: {
          map: {
            'api-m.sandbox.paypal.com:443:::::::::::::::::::::': [Buffer [Uint8Array]]
          },
          list: [ 'api-m.sandbox.paypal.com:443:::::::::::::::::::::' ]
        },
        [Symbol(kCapture)]: false
      },
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      path: '/v1/oauth2/token',
      _ended: true,
      res: IncomingMessage {
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: true,
          endEmitted: true,
          reading: false,
          constructed: true,
          sync: false,
          needReadable: false,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: true,
          autoDestroy: true,
          destroyed: true,
          errored: null,
          closed: true,
          closeEmitted: true,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: responseOnEnd], [Function: handleStreamEnd] ],
          error: [Function: handleStreamError],
          data: [Function: handleStreamData],
          aborted: [Function: handlerStreamAborted]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: <ref *1> TLSSocket {
          _tlsOptions: {
            allowHalfOpen: undefined,
            pipe: false,
            secureContext: [SecureContext],
            isServer: false,
            requestCert: true,
            rejectUnauthorized: true,
            session: undefined,
            ALPNProtocols: undefined,
            requestOCSP: undefined,
            enableTrace: undefined,
            pskCallback: undefined,
            highWaterMark: undefined,
            onread: undefined,
            signal: undefined
          },
          _secureEstablished: true,
          _securePending: false,
          _newSessionPending: false,
          _controlReleased: true,
          secureConnecting: false,
          _SNICallback: null,
          servername: 'api-m.sandbox.paypal.com',
          alpnProtocol: false,
          authorized: true,
          authorizationError: null,
          encrypted: true,
          _events: [Object: null prototype] {
            close: [Array],
            end: [Function: onReadableStreamEnd],
            newListener: [Function: keylogNewListener],
            secure: [Function: onConnectSecure],
            session: [Function (anonymous)],
            free: [Function: onFree],
            timeout: [Function: onTimeout],
            agentRemove: [Function: onRemove],
            error: [Function: socketErrorListener],
            finish: [Function]
          },
          _eventsCount: 10,
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'api-m.sandbox.paypal.com',
          _closeAfterHandlingError: false,
          _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: [BufferList],
            length: 0,
            pipes: [],
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            constructed: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: true,
            destroyed: false,
            errored: null,
            closed: false,
            closeEmitted: false,
            defaultEncoding: 'utf8',
            awaitDrainWriters: null,
            multiAwaitDrain: false,
            readingMore: false,
            dataEmitted: true,
            decoder: null,
            encoding: null,
            [Symbol(kPaused)]: false
          },
          _maxListeners: undefined,
          _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            finalCalled: true,
            needDrain: false,
            ending: true,
            ended: true,
            finished: false,
            destroyed: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function: bound onwrite],
            writecb: null,
            writelen: 0,
            afterWriteTickInfo: null,
            buffered: [],
            bufferedIndex: 0,
            allBuffers: true,
            allNoop: true,
            pendingcb: 1,
            constructed: true,
            prefinished: false,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: true,
            errored: null,
            closed: false,
            closeEmitted: false,
            [Symbol(kOnFinished)]: []
          },
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: undefined,
          _server: null,
          ssl: TLSWrap {
            _parent: [TCP],
            _parentWrap: undefined,
            _secureContext: [SecureContext],
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: {},
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _requestCert: true,
          _rejectUnauthorized: true,
          parser: null,
          _httpMessage: [Circular *2],
          [Symbol(res)]: TLSWrap {
            _parent: [TCP],
            _parentWrap: undefined,
            _secureContext: [SecureContext],
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: {},
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(verified)]: true,
          [Symbol(pendingSession)]: null,
          [Symbol(async_id_symbol)]: 11,
          [Symbol(kHandle)]: TLSWrap {
            _parent: [TCP],
            _parentWrap: undefined,
            _secureContext: [SecureContext],
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: {},
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocsprespons
[error] e],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: false,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 60,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(connect-options)]: {
            rejectUnauthorized: true,
            ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
            checkServerIdentity: [Function: checkServerIdentity],
            minDHSize: 1024,
            maxRedirects: 21,
            maxBodyLength: Infinity,
            protocol: 'https:',
            path: null,
            method: 'POST',
            headers: [Object: null prototype],
            agents: [Object],
            auth: undefined,
            family: undefined,
            lookup: undefined,
            beforeRedirect: [Function: dispatchBeforeRedirect],
            beforeRedirects: [Object],
            hostname: 'api-m.sandbox.paypal.com',
            port: 443,
            agent: undefined,
            nativeProtocols: [Object],
            pathname: '/v1/oauth2/token',
            _defaultAgent: [Agent],
            host: 'api-m.sandbox.paypal.com',
            servername: 'api-m.sandbox.paypal.com',
            _agentKey: 'api-m.sandbox.paypal.com:443:::::::::::::::::::::',
            encoding: null,
            singleUse: true
          },
          [Symbol(RequestTimeout)]: undefined
        },
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        rawHeaders: [
          'Connection',
          'close',
          'Content-Length',
          '150',
          'Content-Type',
          'text/html',
          'Server',
          'nginx',
          'Strict-Transport-Security',
          'max-age=31536000; includeSubDomains',
          'Accept-Ranges',
          'bytes',
          'Via',
          '1.1 varnish, 1.1 varnish',
          'Edge-Control',
          'max-age=120',
          'Date',
          'Wed, 05 Jul 2023 09:06:59 GMT',
          'X-Served-By',
          'cache-qpg1273-QPG, cache-maa10236-MAA',
          'X-Cache',
          'MISS, MISS',
          'X-Cache-Hits',
          '0, 0',
          'X-Timer',
          'S1688548012.982402,VS0,VE7335'
        ],
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 502,
        statusMessage: 'Bad Gateway',
        client: <ref *1> TLSSocket {
          _tlsOptions: {
            allowHalfOpen: undefined,
            pipe: false,
            secureContext: [SecureContext],
            isServer: false,
            requestCert: true,
            rejectUnauthorized: true,
            session: undefined,
            ALPNProtocols: undefined,
            requestOCSP: undefined,
            enableTrace: undefined,
            pskCallback: undefined,
            highWaterMark: undefined,
            onread: undefined,
            signal: undefined
          },
          _secureEstablished: true,
          _securePending: false,
          _newSessionPending: false,
          _controlReleased: true,
          secureConnecting: false,
          _SNICallback: null,
          servername: 'api-m.sandbox.paypal.com',
          alpnProtocol: false,
          authorized: true,
          authorizationError: null,
          encrypted: true,
          _events: [Object: null prototype] {
            close: [Array],
            end: [Function: onReadableStreamEnd],
            newListener: [Function: keylogNewListener],
            secure: [Function: onConnectSecure],
            session: [Function (anonymous)],
            free: [Function: onFree],
            timeout: [Function: onTimeout],
            agentRemove: [Function: onRemove],
            error: [Function: socketErrorListener],
            finish: [Function]
          },
          _eventsCount: 10,
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'api-m.sandbox.paypal.com',
          _closeAfterHandlingError: false,
          _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: [BufferList],
            length: 0,
            pipes: [],
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            constructed: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: true,
            destroyed: false,
            errored: null,
            closed: false,
            closeEmitted: false,
            defaultEncoding: 'utf8',
            awaitDrainWriters: null,
            multiAwaitDrain: false,
            readingMore: false,
            dataEmitted: true,
            decoder: null,
            encoding: null,
            [Symbol(kPaused)]: false
          },
          _maxListeners: undefined,
          _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            finalCalled: true,
            needDrain: false,
            ending: true,
            ended: true,
            finished: false,
            destroyed: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function: bound onwrite],
            writecb: null,
            writelen: 0,
            afterWriteTickInfo: null,
            buffered: [],
            bufferedIndex: 0,
            allBuffers: true,
            allNoop: true,
            pendingcb: 1,
            constructed: true,
            prefinished: false,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: true,
            errored: null,
            closed: false,
            closeEmitted: false,
            [Symbol(kOnFinished)]: []
          },
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: undefined,
          _server: null,
          ssl: TLSWrap {
            _parent: [TCP],
            _parentWrap: undefined,
            _secureContext: [SecureContext],
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: {},
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          _requestCert: true,
          _rejectUnauthorized: true,
          parser: null,
          _httpMessage: [Circular *2],
          [Symbol(res)]: TLSWrap {
            _parent: [TCP],
            _parentWrap: undefined,
            _secureContext: [SecureContext],
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: {},
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(verified)]: true,
          [Symbol(pendingSession)]: null,
          [Symbol(async_id_symbol)]: 11,
          [Symbol(kHandle)]: TLSWrap {
            _parent: [TCP],
            _parentWrap: undefined,
            _secureContext: [SecureContext],
            reading: true,
            onkeylog: [Function: onkeylog],
            onhandshakestart: {},
            onhandshakedone: [Function (anonymous)],
            onocspresponse: [Function: onocspresponse],
            onnewsession: [Function: onnewsessionclient],
            onerror: [Function: onerror],
            [Symbol(owner_symbol)]: [Circular *1]
          },
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: false,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 60,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(connect-options)]: {
            rejectUnauthorized: true,
            ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
            checkServerIdentity: [Function: checkServerIdentity],
            minDHSize: 1024,
            maxRedirects: 21,
            maxBodyLength: Infinity,
            protocol: 'https:',
            path: null,
            method: 'POST',
            headers: [Object: null prototype],
            agents: [Object],
            auth: undefined,
            family: undefined,
            lookup: undefined,
            beforeRedirect: [Function: dispatchBeforeRedirect],
            beforeRedirects: [Object],
            hostname: 'api-m.sandbox.paypal.com',
            port: 443,
            agent: undefined,
            nativeProtocols: [Object],
            pathname: '/v1/oauth2/token',
            _defaultAgent: [Agent],
            host: 'api-m.sandbox.paypal.com',
            servername: 'api-m.sandbox.paypal.com',
            _agentKey: 'api-m.sandbox.paypal.com:443:::::::::::::::::::::',
            encoding: null,
            singleUse: true
          },
          [Symbol(RequestTimeout)]: undefined
        },
        _consuming: true,
        _dumped: false,
        req: [Circular *2],
        responseUrl: 'https://api-m.sandbox.paypal.com/v1/oauth2/token',
        redirects: [],
        [Symbol(kCapture)]: false,
        [Symbol(kHeaders)]: {
          connection: 'close',
          'content-length': '150',
          'content-type': 'text/html',
          server: 'nginx',
          'strict-transport-security': 'max-age=31536000; includeSubDomains',
          'accept-ranges': 'bytes',
          via: '1.1 varnish, 1.1 varnish',
          'edge-control': 'max-age=120',
          date: 'Wed, 05 Jul 2023 09:06:59 GMT',
          'x-served-by': 'cache-qpg1273-QPG, cache-maa10236-MAA',
          'x-cache': 'MISS, MISS',
          'x-cache-hits': '0, 0',
          'x-timer': 'S1688548012.982402,VS0,VE7335'
        },
        [Symbol(kHeadersCount)]: 26,
        [Symbol(kTrailers)]: null,
        [Symbol(kTrailersCount)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'api-m.sandbox.paypal.com',
      protocol: 'https:',
      _redirectable: Writable {
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: true,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: true,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        _events: [Object: null prototype] {
          response: [Function: handleResponse],
          error: [Function: handleRequestError],
          socket: [Function: handleRequestSocket]
        },
        _eventsCount: 3,
        _maxListeners: undefined,
        _options: {
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: 'https:',
          path: '/v1/oauth2/token',
          method: 'POST',
          headers: [Object: null prototype] {
            Accept: 'application/json, text/plain, */*',
            'Content-Type': 'application/x-www-form-urlencoded',
            Authorization: 'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k=',
            'User-Agent': 'axios/1.4.0',
            'Content-Length': '29',
            'Accept-Encoding': 'gzip, compress, deflate, br'
          },
          agents: { http: undefined, https: undefined },
          auth: undefined,
          family: undefined,
          lookup: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: { proxy: [Function: beforeRedirect] },
          hostname: 'api-m.sandbox.paypal.com',
          port: '',
          agent: undefined,
          nativeProtocols: { 'http:': [Object], 'https:': [Object] },
          pathname: '/v1/oauth2/token'
        },
        _ended: true,
        _ending: true,
        _redirectCount: 0,
        _redirects: [],
        _requestBodyLength: 29,
        _requestBodyBuffers: [],
        _onNativeResponse: [Function (anonymous)],
        _currentRequest: [Circular *2],
        _currentUrl: 'https://api-m.sandbox.paypal.com/v1/oauth2/token',
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kEndCalled)]: true,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype] {
        accept: [ 'Accept', 'application/json, text/plain, */*' ],
        'content-type': [ 'Content-Type', 'application/x-www-form-urlencoded' ],
        authorization: [
          'Authorization',
          'Basic QWM5bFo1Vm9teGhuVHJ6bzdYMVNKTHctNTdLcHdQSmdsT0lDSk1GNGEwZTlrOC13LTN1WFNTaW1KMGJKNzlFVFVmblZTYmtWVHdudThYUXM6RUJ5cHh2UVlrOFo5ZEZuN182MVhpb0I1b1phY2R4X1hWV2JwTnhYLUJIVkNmR1U0UGZNZUluZDNPYmtVMlpqN3QyTWdSU01IdFdSZHZ2T2k='
        ],
        'user-agent': [ 'User-Agent', 'axios/1.4.0' ],
        'content-length': [ 'Content-Length', '29' ],
        'accept-encoding': [ 'Accept-Encoding', 'gzip, compress, deflate, br' ],
        host: [ 'Host', 'api-m.sandbox.paypal.com' ]
      },
      [Symbol(kUniqueHeaders)]: null
    },
    data: '<html>\r\n' +
      '<head><title>502 Bad Gateway</title></head>\r\n' +
      '<body>\r\n' +
      '<center><h1>502 Bad Gateway</h1></center>\r\n' +
      '<hr><center>nginx</center>\r\n' +
      '</body>\r\n' +
      '</html>\r\n'
  }
}

[info] i  functions: preparing functions directory for uploading... 
[info] i  functions: packaged /home/vinay/Projects/phyelements/orderself-consumer-ui-v1.0-main/functions (57.03 KB) for uploading 
[debug] [2023-07-05T09:06:59.451Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v1/projects/orderselfdb/locations/-/functions [none]
[debug] [2023-07-05T09:07:00.176Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v1/projects/orderselfdb/locations/-/functions 200
[debug] [2023-07-05T09:07:00.177Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v1/projects/orderselfdb/locations/-/functions {"functions":[{"name":"projects/orderselfdb/locations/us-central1/functions/deletePorterById","httpsTrigger":{"url":"https://us-central1-orderselfdb.cloudfunctions.net/deletePorterById","securityLevel":"SECURE_ALWAYS"},"status":"ACTIVE","entryPoint":"deletePorterById","timeout":"60s","availableMemoryMb":256,"updateTime":"2023-07-03T16:39:51.907Z","versionId":"43","labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"067b5eb485012bf57a19a7962f9a0aec7884914e"},"sourceUploadUrl":"https://storage.googleapis.com/uploads-799975052032.us-central1.cloudfunctions.appspot.com/93a08d70-ecf0-43f4-8a7d-333b0e42ec0d.zip","environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"orderselfdb\",\"storageBucket\":\"orderselfdb.appspot.com\",\"locationId\":\"europe-west\"}","GCLOUD_PROJECT":"orderselfdb","EVENTARC_CLOUD_EVENT_SOURCE":"projects/orderselfdb/locations/us-central1/functions/deletePorterById"},"runtime":"nodejs16","ingressSettings":"ALLOW_ALL","buildId":"48106fb5-f010-4b54-8b37-741e189e5c7b","buildEnvironmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"buildName":"projects/587486512635/locations/us-central1/builds/48106fb5-f010-4b54-8b37-741e189e5c7b","dockerRegistry":"ARTIFACT_REGISTRY"},{"name":"projects/orderselfdb/locations/us-central1/functions/ext-firestore-send-email-processQueue","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","sourceArchiveUrl":"gs://firebase-mod-sources-prod/ac863cc3a91a41ba0679d955d8bdaa4ba64eaac17f122e10ad911db902a4b4d2","eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.write","resource":"projects/orderselfdb/databases/(default)/documents/mail/{id}","service":"firestore.googleapis.com","failurePolicy":{}},"status":"ACTIVE","entryPoint":"processQueue","timeout":"60s","availableMemoryMb":256,"serviceAccountEmail":"ext-firestore-send-email@orderselfdb.iam.gserviceaccount.com","updateTime":"2023-02-16T06:26:36.027Z","versionId":"2","labels":{"firebase-extensions-ar":"enabled","goog-dm":"firebase-ext-firestore-send-email","goog-firebase-ext":"firestore-send-email","deployment-tool":"firebase-extensions","goog-firebase-ext-iid":"firestore-send-email"},"environmentVariables":{"DATABASE_INSTANCE":"","DATABASE_URL":"","DEFAULT_FROM":"noreply-porterregistration@orderself.com","EXT_INSTANCE_ID":"firestore-send-email","FIREBASE_CONFIG":"{\"projectId\":\"orderselfdb\",\"databaseURL\":\"\",\"storageBucket\":\"orderselfdb.appspot.com\"}","GCLOUD_PROJECT":"orderselfdb","LOCATION":"us-central1","MAIL_COLLECTION":"mail","PROJECT_ID":"orderselfdb","SMTP_CONNECTION_URI":"smtp://reactdeveloper@gmail.com:Orderself@2023@hostname:465","STORAGE_BUCKET":"orderselfdb.appspot.com","TTL_EXPIRE_TYPE":"never","TTL_EXPIRE_VALUE":"1"},"runtime":"nodejs14","maxInstances":3000,"ingressSettings":"ALLOW_INTERNAL_ONLY","buildId":"8d6f8596-34b3-48da-8349-2ee864920fec","buildName":"projects/587486512635/locations/us-central1/builds/8d6f8596-34b3-48da-8349-2ee864920fec","dockerRegistry":"ARTIFACT_REGISTRY"},{"name":"projects/orderselfdb/locations/us-central1/functions/fnGetMenuItems","httpsTrigger":{"url":"https://us-central1-orderselfdb.cloudfunctions.net/fnGetMenuItems","securityLevel":"SECURE_ALWAYS"},"status":"ACTIVE","entryPoint":"fnGetMenuItems","timeout":"60s","availableMemoryMb":256,"serviceAccountEmail":"orderselfdb@appspot.gserviceaccount.com","updateTime":"2023-07-03T16:39:47.618Z","versionId":"35","labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"067b5eb485012bf57a19a7962f9a0aec7884914e"},"sourceUploadUrl":"https://storage.googleapis.com/uploads-799975052032.us-central1.cloudfunctions.appspot.com/93a08d70-ecf0-43f4-8a7d-333b0e42ec0d.zip","environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"orderselfdb\",\"storageBucket\":\"orderselfdb.appspot.com\",\"locationId\":\"europe-west\"}","GCLOUD_PROJECT":"orderselfdb","EVENTARC_CLOUD_EVENT_SOURCE":"projects/orderselfdb/locations/us-central1/functions/fnGetMenuItems"},"runtime":"nodejs16","ingressSettings":"ALLOW_ALL","buildId":"48106fb5-f010-4b54-8b37-741e189e5c7b","buildEnvironmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"buildName":"projects/587486512635/locations/us-central1/builds/48106fb5-f010-4b54-8b37-741e189e5c7b","dockerRegistry":"ARTIFACT_REGISTRY"},{"name":"projects/orderselfdb/locations/us-central1/functions/menuItemCsvUpload","httpsTrigger":{"url":"https://us-central1-orderselfdb.cloudfunctions.net/menuItemCsvUpload","securityLevel":"SECURE_ALWAYS"},"status":"ACTIVE","entryPoint":"menuItemCsvUpload","timeout":"60s","availableMemoryMb":256,"serviceAccountEmail":"orderselfdb@appspot.gserviceaccount.com","updateTime":"2023-07-03T16:39:51.404Z","versionId":"32","labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"067b5eb485012bf57a19a7962f9a0aec7884914e"},"sourceUploadUrl":"https://storage.googleapis.com/uploads-799975052032.us-central1.cloudfunctions.appspot.com/93a08d70-ecf0-43f4-8a7d-333b0e42ec0d.zip","environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"orderselfdb\",\"storageBucket\":\"orderselfdb.appspot.com\",\"locationId\":\"europe-west\"}","GCLOUD_PROJECT":"orderselfdb","EVENTARC_CLOUD_EVENT_SOURCE":"projects/orderselfdb/locations/us-central1/functions/menuItemCsvUpload"},"runtime":"nodejs16","ingressSettings":"ALLOW_ALL","buildId":"48106fb5-f010-4b54-8b37-741e189e5c7b","buildEnvironmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"buildName":"projects/587486512635/locations/us-central1/builds/48106fb5-f010-4b54-8b37-741e189e5c7b","dockerRegistry":"ARTIFACT_REGISTRY"},{"name":"projects/orderselfdb/locations/us-central1/functions/sendEmail","eventTrigger":{"eventType":"providers/cloud.firestore/eventTypes/document.create","resource":"projects/orderselfdb/databases/(default)/documents/porterRegistration/{id}","service":"firestore.googleapis.com","failurePolicy":{}},"status":"ACTIVE","entryPoint":"sendEmail","timeout":"60s","availableMemoryMb":256,"serviceAccountEmail":"orderselfdb@appspot.gserviceaccount.com","updateTime":"2023-07-03T16:39:50.152Z","versionId":"32","labels":{"deployment-tool":"cli-firebase","firebase-functions-hash":"067b5eb485012bf57a19a7962f9a0aec7884914e"},"sourceUploadUrl":"https://storage.googleapis.com/uploads-799975052032.us-central1.cloudfunctions.appspot.com/93a08d70-ecf0-43f4-8a7d-333b0e42ec0d.zip","environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"orderselfdb\",\"storageBucket\":\"orderselfdb.appspot.com\",\"locationId\":\"europe-west\"}","GCLOUD_PROJECT":"orderselfdb","EVENTARC_CLOUD_EVENT_SOURCE":"projects/orderselfdb/locations/us-central1/functions/sendEmail"},"runtime":"nodejs16","maxInstances":3000,"ingressSettings":"ALLOW_ALL","buildId":"48106fb5-f010-4b54-8b37-741e189e5c7b","buildEnvironmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"buildName":"projects/587486512635/locations/us-central1/builds/48106fb5-f010-4b54-8b37-741e189e5c7b","dockerRegistry":"ARTIFACT_REGISTRY"}]}
[debug] [2023-07-05T09:07:00.179Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/orderselfdb/locations/-/functions filter=environment%3D%22GEN_2%22
[debug] [2023-07-05T09:07:02.016Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/orderselfdb/locations/-/functions 200
[debug] [2023-07-05T09:07:02.016Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/orderselfdb/locations/-/functions {"functions":[{"name":"projects/orderselfdb/locations/us-central1/functions/getSellerStatus","buildConfig":{"build":"projects/587486512635/locations/us-central1/builds/d185e120-ef62-4632-86b1-c3fb4b69933a","runtime":"nodejs16","entryPoint":"getSellerStatus","source":{"storageSource":{"bucket":"gcf-v2-sources-587486512635-us-central1","object":"getSellerStatus/function-source.zip"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-587486512635-us-central1","object":"getSellerStatus/function-source.zip","generation":"1688525109086908"}}},"serviceConfig":{"service":"projects/orderselfdb/locations/us-central1/services/getsellerstatus","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"orderselfdb\",\"storageBucket\":\"orderselfdb.appspot.com\",\"locationId\":\"europe-west\"}","GCLOUD_PROJECT":"orderselfdb","EVENTARC_CLOUD_EVENT_SOURCE":"projects/orderselfdb/locations/us-central1/services/getSellerStatus"},"maxInstanceCount":100,"ingressSettings":"ALLOW_ALL","uri":"https://getsellerstatus-4u37ag2xcq-uc.a.run.app","serviceAccountEmail":"587486512635-compute@developer.gserviceaccount.com","availableMemory":"256Mi","allTrafficOnLatestRevision":true,"revision":"getsellerstatus-00003-vuy","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"state":"ACTIVE","updateTime":"2023-07-05T02:46:47.580370708Z","labels":{"deployment-tool":"cli-firebase","firebase-functions-hash":"9765e26d680123def1c31bc934129c3173fe75d9"},"environment":"GEN_2","url":"https://us-central1-orderselfdb.cloudfunctions.net/getSellerStatus"}]}
[info] i  functions: ensuring required API run.googleapis.com is enabled... 
[info] i  functions: ensuring required API eventarc.googleapis.com is enabled... 
[info] i  functions: ensuring required API pubsub.googleapis.com is enabled... 
[info] i  functions: ensuring required API storage.googleapis.com is enabled... 
[debug] [2023-07-05T09:07:02.028Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/run.googleapis.com [none]
[debug] [2023-07-05T09:07:02.029Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/run.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:07:02.032Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/eventarc.googleapis.com [none]
[debug] [2023-07-05T09:07:02.033Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/eventarc.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:07:02.036Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/pubsub.googleapis.com [none]
[debug] [2023-07-05T09:07:02.036Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/pubsub.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:07:02.040Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/storage.googleapis.com [none]
[debug] [2023-07-05T09:07:02.040Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/storage.googleapis.com x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:07:03.772Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/run.googleapis.com 200
[debug] [2023-07-05T09:07:03.772Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/run.googleapis.com [omitted]
[info] ✔  functions: required API run.googleapis.com is enabled 
[debug] [2023-07-05T09:07:03.776Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/pubsub.googleapis.com 200
[debug] [2023-07-05T09:07:03.776Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/pubsub.googleapis.com [omitted]
[info] ✔  functions: required API pubsub.googleapis.com is enabled 
[debug] [2023-07-05T09:07:03.777Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/eventarc.googleapis.com 200
[debug] [2023-07-05T09:07:03.778Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/eventarc.googleapis.com [omitted]
[info] ✔  functions: required API eventarc.googleapis.com is enabled 
[debug] [2023-07-05T09:07:04.271Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/storage.googleapis.com 200
[debug] [2023-07-05T09:07:04.272Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/orderselfdb/services/storage.googleapis.com [omitted]
[info] ✔  functions: required API storage.googleapis.com is enabled 
[info] i  functions: generating the service identity for pubsub.googleapis.com... 
[info] i  functions: generating the service identity for eventarc.googleapis.com... 
[debug] [2023-07-05T09:07:04.275Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1beta1/projects/587486512635/services/pubsub.googleapis.com:generateServiceIdentity [none]
[debug] [2023-07-05T09:07:04.279Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1beta1/projects/587486512635/services/eventarc.googleapis.com:generateServiceIdentity [none]
[debug] [2023-07-05T09:07:06.011Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1beta1/projects/587486512635/services/eventarc.googleapis.com:generateServiceIdentity 200
[debug] [2023-07-05T09:07:06.012Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/587486512635/services/eventarc.googleapis.com:generateServiceIdentity {"name":"operations/finished.DONE_OPERATION","done":true,"response":{"@type":"type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity","email":"service-587486512635@gcp-sa-eventarc.iam.gserviceaccount.com","uniqueId":"114210900022737231548"}}
[debug] [2023-07-05T09:07:06.217Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1beta1/projects/587486512635/services/pubsub.googleapis.com:generateServiceIdentity 200
[debug] [2023-07-05T09:07:06.217Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/587486512635/services/pubsub.googleapis.com:generateServiceIdentity {"name":"operations/finished.DONE_OPERATION","done":true,"response":{"@type":"type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity","email":"service-587486512635@gcp-sa-pubsub.iam.gserviceaccount.com","uniqueId":"104509276031377170066"}}
[debug] [2023-07-05T09:07:06.228Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb [none]
[debug] [2023-07-05T09:07:06.934Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb 200
[debug] [2023-07-05T09:07:06.934Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/orderselfdb {"projectId":"orderselfdb","projectNumber":"587486512635","displayName":"orderselfdb","name":"projects/orderselfdb","resources":{"hostingSite":"orderselfdb","storageBucket":"orderselfdb.appspot.com","locationId":"europe-west"},"state":"ACTIVE","etag":"1_f8f32fd8-e496-4c62-b5ac-18753a634b21"}
[debug] [2023-07-05T09:07:06.939Z] [functions] found 2 new HTTP functions, testing setIamPolicy permission...
[debug] [2023-07-05T09:07:06.940Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions [none]
[debug] [2023-07-05T09:07:06.941Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions x-goog-quota-user=projects/orderselfdb
[debug] [2023-07-05T09:07:06.941Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions {"permissions":["cloudfunctions.functions.setIamPolicy"]}
[debug] [2023-07-05T09:07:08.266Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions 200
[debug] [2023-07-05T09:07:08.267Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/orderselfdb:testIamPermissions {"permissions":["cloudfunctions.functions.setIamPolicy"]}
[debug] [2023-07-05T09:07:08.267Z] [functions] found setIamPolicy permission, proceeding with deploy
[debug] [2023-07-05T09:07:08.270Z] >>> [apiv2][query] POST https://cloudfunctions.googleapis.com/v2/projects/orderselfdb/locations/us-central1/functions:generateUploadUrl [none]
[debug] [2023-07-05T09:07:09.900Z] <<< [apiv2][status] POST https://cloudfunctions.googleapis.com/v2/projects/orderselfdb/locations/us-central1/functions:generateUploadUrl 200
[debug] [2023-07-05T09:07:09.901Z] <<< [apiv2][body] POST https://cloudfunctions.googleapis.com/v2/projects/orderselfdb/locations/us-central1/functions:generateUploadUrl {"uploadUrl":"https://storage.googleapis.com/gcf-v2-uploads-587486512635-us-central1/3dfdd6d8-8e23-4975-9326-fb4cd2dc0ae3.zip?GoogleAccessId=service-587486512635@gcf-admin-robot.iam.gserviceaccount.com&Expires=1688549829&Signature=ZjMeZJAi3qrcv90T00t%2FeLCriVNsgVXjISquXBoAPppFRYRLwKr2hQdyDVcSPvRf1Sd4IsA2YvMHyw13jzT2IBlSndULlz4UDsPc3ZKYDqK4Ubj8GcGYAwQ9crDxZ3xUGv7ZCJPWvIT%2BF5RBcf8fGqMLm3sV6ZZsKSQiBuzwVgiewwyZYPnzGDvL4T4yRvPWNFiTAg4xV%2B0W78vMvuOjz2Oo0uip3%2BUuYj9TlA1X2IVUGw85TK2Y3MHIv5jbTXTaHtj9%2B3Gz7S3RbH91cfAHpD5sB9GMnFyFKnWD4vOOQXTEXjEEh1hhCpcDkHIfAxFqiHNPQlNTB%2Fg6EL%2F0pL68FQ%3D%3D","storageSource":{"bucket":"gcf-v2-uploads-587486512635-us-central1","object":"3dfdd6d8-8e23-4975-9326-fb4cd2dc0ae3.zip"}}
[debug] [2023-07-05T09:07:09.904Z] >>> [apiv2][query] PUT https://storage.googleapis.com/gcf-v2-uploads-587486512635-us-central1/3dfdd6d8-8e23-4975-9326-fb4cd2dc0ae3.zip GoogleAccessId=service-587486512635%40gcf-admin-robot.iam.gserviceaccount.com&Expires=1688549829&Signature=ZjMeZJAi3qrcv90T00t%2FeLCriVNsgVXjISquXBoAPppFRYRLwKr2hQdyDVcSPvRf1Sd4IsA2YvMHyw13jzT2IBlSndULlz4UDsPc3ZKYDqK4Ubj8GcGYAwQ9crDxZ3xUGv7ZCJPWvIT%2BF5RBcf8fGqMLm3sV6ZZsKSQiBuzwVgiewwyZYPnzGDvL4T4yRvPWNFiTAg4xV%2B0W78vMvuOjz2Oo0uip3%2BUuYj9TlA1X2IVUGw85TK2Y3MHIv5jbTXTaHtj9%2B3Gz7S3RbH91cfAHpD5sB9GMnFyFKnWD4vOOQXTEXjEEh1hhCpcDkHIfAxFqiHNPQlNTB%2Fg6EL%2F0pL68FQ%3D%3D
[debug] [2023-07-05T09:07:09.905Z] >>> [apiv2][body] PUT https://storage.googleapis.com/gcf-v2-uploads-587486512635-us-central1/3dfdd6d8-8e23-4975-9326-fb4cd2dc0ae3.zip [stream]
[debug] [2023-07-05T09:07:10.948Z] <<< [apiv2][status] PUT https://storage.googleapis.com/gcf-v2-uploads-587486512635-us-central1/3dfdd6d8-8e23-4975-9326-fb4cd2dc0ae3.zip 200
[debug] [2023-07-05T09:07:10.949Z] <<< [apiv2][body] PUT https://storage.googleapis.com/gcf-v2-uploads-587486512635-us-central1/3dfdd6d8-8e23-4975-9326-fb4cd2dc0ae3.zip [omitted]
[info] ✔  functions: functions folder uploaded successfully 
[info] 
The following functions are found in your project but do not exist in your local source code:
	deletePorterById(us-central1)
	fnGetMenuItems(us-central1)
	menuItemCsvUpload(us-central1)
	sendEmail(us-central1)

If you are renaming a function or changing its region, it is recommended that you create the new function first before deleting the old one to prevent event loss. For more info, visit https://firebase.google.com/docs/functions/manage-functions#modify

